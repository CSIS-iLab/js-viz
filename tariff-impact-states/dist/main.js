!function(t){var n=window.webpackHotUpdate;window.webpackHotUpdate=function(t,e){!function(t,n){if(!_[t]||!w[t])return;for(var e in w[t]=!1,n)Object.prototype.hasOwnProperty.call(n,e)&&(d[e]=n[e]);0==--v&&0===y&&A()}(t,e),n&&n(t,e)};var e,r=!0,i="61f9a51cc9a5280edd5e",o=1e4,u={},a=[],c=[];function l(t){var n=k[t];if(!n)return C;var r=function(r){return n.hot.active?(k[r]?-1===k[r].parents.indexOf(t)&&k[r].parents.push(t):(a=[t],e=r),-1===n.children.indexOf(r)&&n.children.push(r)):(console.warn("[HMR] unexpected require("+r+") from disposed module "+t),a=[]),C(r)},i=function(t){return{configurable:!0,enumerable:!0,get:function(){return C[t]},set:function(n){C[t]=n}}};for(var o in C)Object.prototype.hasOwnProperty.call(C,o)&&"e"!==o&&"t"!==o&&Object.defineProperty(r,o,i(o));return r.e=function(t){return"ready"===f&&h("prepare"),y++,C.e(t).then(n,function(t){throw n(),t});function n(){y--,"prepare"===f&&(m[t]||x(t),0===y&&0===v&&A())}},r.t=function(t,n){return 1&n&&(t=r(t)),C.t(t,-2&n)},r}var s=[],f="idle";function h(t){f=t;for(var n=0;n<s.length;n++)s[n].call(null,t)}var p,d,g,v=0,y=0,m={},w={},_={};function b(t){return+t+""===t?+t:t}function M(t){if("idle"!==f)throw new Error("check() is only allowed in idle status");return r=t,h("check"),function(t){return t=t||1e4,new Promise(function(n,e){if("undefined"==typeof XMLHttpRequest)return e(new Error("No browser support"));try{var r=new XMLHttpRequest,o=C.p+""+i+".hot-update.json";r.open("GET",o,!0),r.timeout=t,r.send(null)}catch(t){return e(t)}r.onreadystatechange=function(){if(4===r.readyState)if(0===r.status)e(new Error("Manifest request to "+o+" timed out."));else if(404===r.status)n();else if(200!==r.status&&304!==r.status)e(new Error("Manifest request to "+o+" failed."));else{try{var t=JSON.parse(r.responseText)}catch(t){return void e(t)}n(t)}}})}(o).then(function(t){if(!t)return h("idle"),null;w={},m={},_=t.c,g=t.h,h("prepare");var n=new Promise(function(t,n){p={resolve:t,reject:n}});d={};return x(0),"prepare"===f&&0===y&&0===v&&A(),n})}function x(t){_[t]?(w[t]=!0,v++,function(t){var n=document.getElementsByTagName("head")[0],e=document.createElement("script");e.charset="utf-8",e.src=C.p+""+t+"."+i+".hot-update.js",n.appendChild(e)}(t)):m[t]=!0}function A(){h("ready");var t=p;if(p=null,t)if(r)Promise.resolve().then(function(){return T(r)}).then(function(n){t.resolve(n)},function(n){t.reject(n)});else{var n=[];for(var e in d)Object.prototype.hasOwnProperty.call(d,e)&&n.push(b(e));t.resolve(n)}}function T(n){if("ready"!==f)throw new Error("apply() is only allowed in ready status");var e,r,o,c,l;function s(t){for(var n=[t],e={},r=n.slice().map(function(t){return{chain:[t],id:t}});r.length>0;){var i=r.pop(),o=i.id,u=i.chain;if((c=k[o])&&!c.hot._selfAccepted){if(c.hot._selfDeclined)return{type:"self-declined",chain:u,moduleId:o};if(c.hot._main)return{type:"unaccepted",chain:u,moduleId:o};for(var a=0;a<c.parents.length;a++){var l=c.parents[a],s=k[l];if(s){if(s.hot._declinedDependencies[o])return{type:"declined",chain:u.concat([l]),moduleId:o,parentId:l};-1===n.indexOf(l)&&(s.hot._acceptedDependencies[o]?(e[l]||(e[l]=[]),p(e[l],[o])):(delete e[l],n.push(l),r.push({chain:u.concat([l]),id:l})))}}}}return{type:"accepted",moduleId:t,outdatedModules:n,outdatedDependencies:e}}function p(t,n){for(var e=0;e<n.length;e++){var r=n[e];-1===t.indexOf(r)&&t.push(r)}}n=n||{};var v={},y=[],m={},w=function(){console.warn("[HMR] unexpected require("+x.moduleId+") to disposed module")};for(var M in d)if(Object.prototype.hasOwnProperty.call(d,M)){var x;l=b(M);var A=!1,T=!1,D=!1,S="";switch((x=d[M]?s(l):{type:"disposed",moduleId:M}).chain&&(S="\nUpdate propagation: "+x.chain.join(" -> ")),x.type){case"self-declined":n.onDeclined&&n.onDeclined(x),n.ignoreDeclined||(A=new Error("Aborted because of self decline: "+x.moduleId+S));break;case"declined":n.onDeclined&&n.onDeclined(x),n.ignoreDeclined||(A=new Error("Aborted because of declined dependency: "+x.moduleId+" in "+x.parentId+S));break;case"unaccepted":n.onUnaccepted&&n.onUnaccepted(x),n.ignoreUnaccepted||(A=new Error("Aborted because "+l+" is not accepted"+S));break;case"accepted":n.onAccepted&&n.onAccepted(x),T=!0;break;case"disposed":n.onDisposed&&n.onDisposed(x),D=!0;break;default:throw new Error("Unexception type "+x.type)}if(A)return h("abort"),Promise.reject(A);if(T)for(l in m[l]=d[l],p(y,x.outdatedModules),x.outdatedDependencies)Object.prototype.hasOwnProperty.call(x.outdatedDependencies,l)&&(v[l]||(v[l]=[]),p(v[l],x.outdatedDependencies[l]));D&&(p(y,[x.moduleId]),m[l]=w)}var E,N=[];for(r=0;r<y.length;r++)l=y[r],k[l]&&k[l].hot._selfAccepted&&N.push({module:l,errorHandler:k[l].hot._selfAccepted});h("dispose"),Object.keys(_).forEach(function(t){!1===_[t]&&function(t){delete installedChunks[t]}(t)});for(var U,O,j=y.slice();j.length>0;)if(l=j.pop(),c=k[l]){var H={},P=c.hot._disposeHandlers;for(o=0;o<P.length;o++)(e=P[o])(H);for(u[l]=H,c.hot.active=!1,delete k[l],delete v[l],o=0;o<c.children.length;o++){var F=k[c.children[o]];F&&((E=F.parents.indexOf(l))>=0&&F.parents.splice(E,1))}}for(l in v)if(Object.prototype.hasOwnProperty.call(v,l)&&(c=k[l]))for(O=v[l],o=0;o<O.length;o++)U=O[o],(E=c.children.indexOf(U))>=0&&c.children.splice(E,1);for(l in h("apply"),i=g,m)Object.prototype.hasOwnProperty.call(m,l)&&(t[l]=m[l]);var Y=null;for(l in v)if(Object.prototype.hasOwnProperty.call(v,l)&&(c=k[l])){O=v[l];var q=[];for(r=0;r<O.length;r++)if(U=O[r],e=c.hot._acceptedDependencies[U]){if(-1!==q.indexOf(e))continue;q.push(e)}for(r=0;r<q.length;r++){e=q[r];try{e(O)}catch(t){n.onErrored&&n.onErrored({type:"accept-errored",moduleId:l,dependencyId:O[r],error:t}),n.ignoreErrored||Y||(Y=t)}}}for(r=0;r<N.length;r++){var I=N[r];l=I.module,a=[l];try{C(l)}catch(t){if("function"==typeof I.errorHandler)try{I.errorHandler(t)}catch(e){n.onErrored&&n.onErrored({type:"self-accept-error-handler-errored",moduleId:l,error:e,originalError:t}),n.ignoreErrored||Y||(Y=e),Y||(Y=t)}else n.onErrored&&n.onErrored({type:"self-accept-errored",moduleId:l,error:t}),n.ignoreErrored||Y||(Y=t)}}return Y?(h("fail"),Promise.reject(Y)):(h("idle"),new Promise(function(t){t(y)}))}var k={};function C(n){if(k[n])return k[n].exports;var r=k[n]={i:n,l:!1,exports:{},hot:function(t){var n={_acceptedDependencies:{},_declinedDependencies:{},_selfAccepted:!1,_selfDeclined:!1,_disposeHandlers:[],_main:e!==t,active:!0,accept:function(t,e){if(void 0===t)n._selfAccepted=!0;else if("function"==typeof t)n._selfAccepted=t;else if("object"==typeof t)for(var r=0;r<t.length;r++)n._acceptedDependencies[t[r]]=e||function(){};else n._acceptedDependencies[t]=e||function(){}},decline:function(t){if(void 0===t)n._selfDeclined=!0;else if("object"==typeof t)for(var e=0;e<t.length;e++)n._declinedDependencies[t[e]]=!0;else n._declinedDependencies[t]=!0},dispose:function(t){n._disposeHandlers.push(t)},addDisposeHandler:function(t){n._disposeHandlers.push(t)},removeDisposeHandler:function(t){var e=n._disposeHandlers.indexOf(t);e>=0&&n._disposeHandlers.splice(e,1)},check:M,apply:T,status:function(t){if(!t)return f;s.push(t)},addStatusHandler:function(t){s.push(t)},removeStatusHandler:function(t){var n=s.indexOf(t);n>=0&&s.splice(n,1)},data:u[t]};return e=void 0,n}(n),parents:(c=a,a=[],c),children:[]};return t[n].call(r.exports,r,r.exports,l(n)),r.l=!0,r.exports}C.m=t,C.c=k,C.d=function(t,n,e){C.o(t,n)||Object.defineProperty(t,n,{enumerable:!0,get:e})},C.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},C.t=function(t,n){if(1&n&&(t=C(t)),8&n)return t;if(4&n&&"object"==typeof t&&t&&t.__esModule)return t;var e=Object.create(null);if(C.r(e),Object.defineProperty(e,"default",{enumerable:!0,value:t}),2&n&&"string"!=typeof t)for(var r in t)C.d(e,r,function(n){return t[n]}.bind(null,r));return e},C.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return C.d(n,"a",n),n},C.o=function(t,n){return Object.prototype.hasOwnProperty.call(t,n)},C.p="",C.h=function(){return i},l(1)(C.s=1)}([function(t,n,e){},function(t,n,e){"use strict";e.r(n);e(0);var r="http://www.w3.org/1999/xhtml",i={svg:"http://www.w3.org/2000/svg",xhtml:r,xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/"},o=function(t){var n=t+="",e=n.indexOf(":");return e>=0&&"xmlns"!==(n=t.slice(0,e))&&(t=t.slice(e+1)),i.hasOwnProperty(n)?{space:i[n],local:t}:t};var u=function(t){var n=o(t);return(n.local?function(t){return function(){return this.ownerDocument.createElementNS(t.space,t.local)}}:function(t){return function(){var n=this.ownerDocument,e=this.namespaceURI;return e===r&&n.documentElement.namespaceURI===r?n.createElement(t):n.createElementNS(e,t)}})(n)};function a(){}var c=function(t){return null==t?a:function(){return this.querySelector(t)}};function l(){return[]}var s=function(t){return null==t?l:function(){return this.querySelectorAll(t)}},f=function(t){return function(){return this.matches(t)}};if("undefined"!=typeof document){var h=document.documentElement;if(!h.matches){var p=h.webkitMatchesSelector||h.msMatchesSelector||h.mozMatchesSelector||h.oMatchesSelector;f=function(t){return function(){return p.call(this,t)}}}}var d=f,g=function(t){return new Array(t.length)};function v(t,n){this.ownerDocument=t.ownerDocument,this.namespaceURI=t.namespaceURI,this._next=null,this._parent=t,this.__data__=n}v.prototype={constructor:v,appendChild:function(t){return this._parent.insertBefore(t,this._next)},insertBefore:function(t,n){return this._parent.insertBefore(t,n)},querySelector:function(t){return this._parent.querySelector(t)},querySelectorAll:function(t){return this._parent.querySelectorAll(t)}};var y="$";function m(t,n,e,r,i,o){for(var u,a=0,c=n.length,l=o.length;a<l;++a)(u=n[a])?(u.__data__=o[a],r[a]=u):e[a]=new v(t,o[a]);for(;a<c;++a)(u=n[a])&&(i[a]=u)}function w(t,n,e,r,i,o,u){var a,c,l,s={},f=n.length,h=o.length,p=new Array(f);for(a=0;a<f;++a)(c=n[a])&&(p[a]=l=y+u.call(c,c.__data__,a,n),l in s?i[a]=c:s[l]=c);for(a=0;a<h;++a)(c=s[l=y+u.call(t,o[a],a,o)])?(r[a]=c,c.__data__=o[a],s[l]=null):e[a]=new v(t,o[a]);for(a=0;a<f;++a)(c=n[a])&&s[p[a]]===c&&(i[a]=c)}function _(t,n){return t<n?-1:t>n?1:t>=n?0:NaN}var b=function(t){return t.ownerDocument&&t.ownerDocument.defaultView||t.document&&t||t.defaultView};function M(t,n){return t.style.getPropertyValue(n)||b(t).getComputedStyle(t,null).getPropertyValue(n)}function x(t){return t.trim().split(/^|\s+/)}function A(t){return t.classList||new T(t)}function T(t){this._node=t,this._names=x(t.getAttribute("class")||"")}function k(t,n){for(var e=A(t),r=-1,i=n.length;++r<i;)e.add(n[r])}function C(t,n){for(var e=A(t),r=-1,i=n.length;++r<i;)e.remove(n[r])}T.prototype={add:function(t){this._names.indexOf(t)<0&&(this._names.push(t),this._node.setAttribute("class",this._names.join(" ")))},remove:function(t){var n=this._names.indexOf(t);n>=0&&(this._names.splice(n,1),this._node.setAttribute("class",this._names.join(" ")))},contains:function(t){return this._names.indexOf(t)>=0}};function D(){this.textContent=""}function S(){this.innerHTML=""}function E(){this.nextSibling&&this.parentNode.appendChild(this)}function N(){this.previousSibling&&this.parentNode.insertBefore(this,this.parentNode.firstChild)}function U(){return null}function O(){var t=this.parentNode;t&&t.removeChild(this)}function j(){return this.parentNode.insertBefore(this.cloneNode(!1),this.nextSibling)}function H(){return this.parentNode.insertBefore(this.cloneNode(!0),this.nextSibling)}var P={},F=null;"undefined"!=typeof document&&("onmouseenter"in document.documentElement||(P={mouseenter:"mouseover",mouseleave:"mouseout"}));function Y(t,n,e){return t=q(t,n,e),function(n){var e=n.relatedTarget;e&&(e===this||8&e.compareDocumentPosition(this))||t.call(this,n)}}function q(t,n,e){return function(r){var i=F;F=r;try{t.call(this,this.__data__,n,e)}finally{F=i}}}function I(t){return function(){var n=this.__on;if(n){for(var e,r=0,i=-1,o=n.length;r<o;++r)e=n[r],t.type&&e.type!==t.type||e.name!==t.name?n[++i]=e:this.removeEventListener(e.type,e.listener,e.capture);++i?n.length=i:delete this.__on}}}function L(t,n,e){var r=P.hasOwnProperty(t.type)?Y:q;return function(i,o,u){var a,c=this.__on,l=r(n,o,u);if(c)for(var s=0,f=c.length;s<f;++s)if((a=c[s]).type===t.type&&a.name===t.name)return this.removeEventListener(a.type,a.listener,a.capture),this.addEventListener(a.type,a.listener=l,a.capture=e),void(a.value=n);this.addEventListener(t.type,l,e),a={type:t.type,name:t.name,value:n,listener:l,capture:e},c?c.push(a):this.__on=[a]}}function $(t,n,e){var r=b(t),i=r.CustomEvent;"function"==typeof i?i=new i(n,e):(i=r.document.createEvent("Event"),e?(i.initEvent(n,e.bubbles,e.cancelable),i.detail=e.detail):i.initEvent(n,!1,!1)),t.dispatchEvent(i)}var X=[null];function z(t,n){this._groups=t,this._parents=n}function R(){return new z([[document.documentElement]],X)}z.prototype=R.prototype={constructor:z,select:function(t){"function"!=typeof t&&(t=c(t));for(var n=this._groups,e=n.length,r=new Array(e),i=0;i<e;++i)for(var o,u,a=n[i],l=a.length,s=r[i]=new Array(l),f=0;f<l;++f)(o=a[f])&&(u=t.call(o,o.__data__,f,a))&&("__data__"in o&&(u.__data__=o.__data__),s[f]=u);return new z(r,this._parents)},selectAll:function(t){"function"!=typeof t&&(t=s(t));for(var n=this._groups,e=n.length,r=[],i=[],o=0;o<e;++o)for(var u,a=n[o],c=a.length,l=0;l<c;++l)(u=a[l])&&(r.push(t.call(u,u.__data__,l,a)),i.push(u));return new z(r,i)},filter:function(t){"function"!=typeof t&&(t=d(t));for(var n=this._groups,e=n.length,r=new Array(e),i=0;i<e;++i)for(var o,u=n[i],a=u.length,c=r[i]=[],l=0;l<a;++l)(o=u[l])&&t.call(o,o.__data__,l,u)&&c.push(o);return new z(r,this._parents)},data:function(t,n){if(!t)return p=new Array(this.size()),l=-1,this.each(function(t){p[++l]=t}),p;var e=n?w:m,r=this._parents,i=this._groups;"function"!=typeof t&&(t=function(t){return function(){return t}}(t));for(var o=i.length,u=new Array(o),a=new Array(o),c=new Array(o),l=0;l<o;++l){var s=r[l],f=i[l],h=f.length,p=t.call(s,s&&s.__data__,l,r),d=p.length,g=a[l]=new Array(d),v=u[l]=new Array(d);e(s,f,g,v,c[l]=new Array(h),p,n);for(var y,_,b=0,M=0;b<d;++b)if(y=g[b]){for(b>=M&&(M=b+1);!(_=v[M])&&++M<d;);y._next=_||null}}return(u=new z(u,r))._enter=a,u._exit=c,u},enter:function(){return new z(this._enter||this._groups.map(g),this._parents)},exit:function(){return new z(this._exit||this._groups.map(g),this._parents)},merge:function(t){for(var n=this._groups,e=t._groups,r=n.length,i=e.length,o=Math.min(r,i),u=new Array(r),a=0;a<o;++a)for(var c,l=n[a],s=e[a],f=l.length,h=u[a]=new Array(f),p=0;p<f;++p)(c=l[p]||s[p])&&(h[p]=c);for(;a<r;++a)u[a]=n[a];return new z(u,this._parents)},order:function(){for(var t=this._groups,n=-1,e=t.length;++n<e;)for(var r,i=t[n],o=i.length-1,u=i[o];--o>=0;)(r=i[o])&&(u&&u!==r.nextSibling&&u.parentNode.insertBefore(r,u),u=r);return this},sort:function(t){function n(n,e){return n&&e?t(n.__data__,e.__data__):!n-!e}t||(t=_);for(var e=this._groups,r=e.length,i=new Array(r),o=0;o<r;++o){for(var u,a=e[o],c=a.length,l=i[o]=new Array(c),s=0;s<c;++s)(u=a[s])&&(l[s]=u);l.sort(n)}return new z(i,this._parents).order()},call:function(){var t=arguments[0];return arguments[0]=this,t.apply(null,arguments),this},nodes:function(){var t=new Array(this.size()),n=-1;return this.each(function(){t[++n]=this}),t},node:function(){for(var t=this._groups,n=0,e=t.length;n<e;++n)for(var r=t[n],i=0,o=r.length;i<o;++i){var u=r[i];if(u)return u}return null},size:function(){var t=0;return this.each(function(){++t}),t},empty:function(){return!this.node()},each:function(t){for(var n=this._groups,e=0,r=n.length;e<r;++e)for(var i,o=n[e],u=0,a=o.length;u<a;++u)(i=o[u])&&t.call(i,i.__data__,u,o);return this},attr:function(t,n){var e=o(t);if(arguments.length<2){var r=this.node();return e.local?r.getAttributeNS(e.space,e.local):r.getAttribute(e)}return this.each((null==n?e.local?function(t){return function(){this.removeAttributeNS(t.space,t.local)}}:function(t){return function(){this.removeAttribute(t)}}:"function"==typeof n?e.local?function(t,n){return function(){var e=n.apply(this,arguments);null==e?this.removeAttributeNS(t.space,t.local):this.setAttributeNS(t.space,t.local,e)}}:function(t,n){return function(){var e=n.apply(this,arguments);null==e?this.removeAttribute(t):this.setAttribute(t,e)}}:e.local?function(t,n){return function(){this.setAttributeNS(t.space,t.local,n)}}:function(t,n){return function(){this.setAttribute(t,n)}})(e,n))},style:function(t,n,e){return arguments.length>1?this.each((null==n?function(t){return function(){this.style.removeProperty(t)}}:"function"==typeof n?function(t,n,e){return function(){var r=n.apply(this,arguments);null==r?this.style.removeProperty(t):this.style.setProperty(t,r,e)}}:function(t,n,e){return function(){this.style.setProperty(t,n,e)}})(t,n,null==e?"":e)):M(this.node(),t)},property:function(t,n){return arguments.length>1?this.each((null==n?function(t){return function(){delete this[t]}}:"function"==typeof n?function(t,n){return function(){var e=n.apply(this,arguments);null==e?delete this[t]:this[t]=e}}:function(t,n){return function(){this[t]=n}})(t,n)):this.node()[t]},classed:function(t,n){var e=x(t+"");if(arguments.length<2){for(var r=A(this.node()),i=-1,o=e.length;++i<o;)if(!r.contains(e[i]))return!1;return!0}return this.each(("function"==typeof n?function(t,n){return function(){(n.apply(this,arguments)?k:C)(this,t)}}:n?function(t){return function(){k(this,t)}}:function(t){return function(){C(this,t)}})(e,n))},text:function(t){return arguments.length?this.each(null==t?D:("function"==typeof t?function(t){return function(){var n=t.apply(this,arguments);this.textContent=null==n?"":n}}:function(t){return function(){this.textContent=t}})(t)):this.node().textContent},html:function(t){return arguments.length?this.each(null==t?S:("function"==typeof t?function(t){return function(){var n=t.apply(this,arguments);this.innerHTML=null==n?"":n}}:function(t){return function(){this.innerHTML=t}})(t)):this.node().innerHTML},raise:function(){return this.each(E)},lower:function(){return this.each(N)},append:function(t){var n="function"==typeof t?t:u(t);return this.select(function(){return this.appendChild(n.apply(this,arguments))})},insert:function(t,n){var e="function"==typeof t?t:u(t),r=null==n?U:"function"==typeof n?n:c(n);return this.select(function(){return this.insertBefore(e.apply(this,arguments),r.apply(this,arguments)||null)})},remove:function(){return this.each(O)},clone:function(t){return this.select(t?H:j)},datum:function(t){return arguments.length?this.property("__data__",t):this.node().__data__},on:function(t,n,e){var r,i,o=function(t){return t.trim().split(/^|\s+/).map(function(t){var n="",e=t.indexOf(".");return e>=0&&(n=t.slice(e+1),t=t.slice(0,e)),{type:t,name:n}})}(t+""),u=o.length;if(!(arguments.length<2)){for(a=n?L:I,null==e&&(e=!1),r=0;r<u;++r)this.each(a(o[r],n,e));return this}var a=this.node().__on;if(a)for(var c,l=0,s=a.length;l<s;++l)for(r=0,c=a[l];r<u;++r)if((i=o[r]).type===c.type&&i.name===c.name)return c.value},dispatch:function(t,n){return this.each(("function"==typeof n?function(t,n){return function(){return $(this,t,n.apply(this,arguments))}}:function(t,n){return function(){return $(this,t,n)}})(t,n))}};var V=R,B=function(t){return"string"==typeof t?new z([[document.querySelector(t)]],[document.documentElement]):new z([[t]],X)},Z=0;function W(){this._="@"+(++Z).toString(36)}W.prototype=function(){return new W}.prototype={constructor:W,get:function(t){for(var n=this._;!(n in t);)if(!(t=t.parentNode))return;return t[n]},set:function(t,n){return t[this._]=n},remove:function(t){return this._ in t&&delete t[this._]},toString:function(){return this._}};var Q=function(t){return"string"==typeof t?new z([document.querySelectorAll(t)],[document.documentElement]):new z([null==t?[]:t],X)},J=function(t,n){if((e=(t=n?t.toExponential(n-1):t.toExponential()).indexOf("e"))<0)return null;var e,r=t.slice(0,e);return[r.length>1?r[0]+r.slice(2):r,+t.slice(e+1)]},G=function(t){return(t=J(Math.abs(t)))?t[1]:NaN},K=/^(?:(.)?([<>=^]))?([+\-( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?(~)?([a-z%])?$/i;function tt(t){return new nt(t)}function nt(t){if(!(n=K.exec(t)))throw new Error("invalid format: "+t);var n;this.fill=n[1]||" ",this.align=n[2]||">",this.sign=n[3]||"-",this.symbol=n[4]||"",this.zero=!!n[5],this.width=n[6]&&+n[6],this.comma=!!n[7],this.precision=n[8]&&+n[8].slice(1),this.trim=!!n[9],this.type=n[10]||""}tt.prototype=nt.prototype,nt.prototype.toString=function(){return this.fill+this.align+this.sign+this.symbol+(this.zero?"0":"")+(null==this.width?"":Math.max(1,0|this.width))+(this.comma?",":"")+(null==this.precision?"":"."+Math.max(0,0|this.precision))+(this.trim?"~":"")+this.type};var et,rt,it,ot,ut=function(t){t:for(var n,e=t.length,r=1,i=-1;r<e;++r)switch(t[r]){case".":i=n=r;break;case"0":0===i&&(i=r),n=r;break;default:if(i>0){if(!+t[r])break t;i=0}}return i>0?t.slice(0,i)+t.slice(n+1):t},at=function(t,n){var e=J(t,n);if(!e)return t+"";var r=e[0],i=e[1];return i<0?"0."+new Array(-i).join("0")+r:r.length>i+1?r.slice(0,i+1)+"."+r.slice(i+1):r+new Array(i-r.length+2).join("0")},ct={"%":function(t,n){return(100*t).toFixed(n)},b:function(t){return Math.round(t).toString(2)},c:function(t){return t+""},d:function(t){return Math.round(t).toString(10)},e:function(t,n){return t.toExponential(n)},f:function(t,n){return t.toFixed(n)},g:function(t,n){return t.toPrecision(n)},o:function(t){return Math.round(t).toString(8)},p:function(t,n){return at(100*t,n)},r:at,s:function(t,n){var e=J(t,n);if(!e)return t+"";var r=e[0],i=e[1],o=i-(et=3*Math.max(-8,Math.min(8,Math.floor(i/3))))+1,u=r.length;return o===u?r:o>u?r+new Array(o-u+1).join("0"):o>0?r.slice(0,o)+"."+r.slice(o):"0."+new Array(1-o).join("0")+J(t,Math.max(0,n+o-1))[0]},X:function(t){return Math.round(t).toString(16).toUpperCase()},x:function(t){return Math.round(t).toString(16)}},lt=function(t){return t},st=["y","z","a","f","p","n","µ","m","","k","M","G","T","P","E","Z","Y"],ft=function(t){var n=t.grouping&&t.thousands?function(t,n){return function(e,r){for(var i=e.length,o=[],u=0,a=t[0],c=0;i>0&&a>0&&(c+a+1>r&&(a=Math.max(1,r-c)),o.push(e.substring(i-=a,i+a)),!((c+=a+1)>r));)a=t[u=(u+1)%t.length];return o.reverse().join(n)}}(t.grouping,t.thousands):lt,e=t.currency,r=t.decimal,i=t.numerals?function(t){return function(n){return n.replace(/[0-9]/g,function(n){return t[+n]})}}(t.numerals):lt,o=t.percent||"%";function u(t){var u=(t=tt(t)).fill,a=t.align,c=t.sign,l=t.symbol,s=t.zero,f=t.width,h=t.comma,p=t.precision,d=t.trim,g=t.type;"n"===g?(h=!0,g="g"):ct[g]||(null==p&&(p=12),d=!0,g="g"),(s||"0"===u&&"="===a)&&(s=!0,u="0",a="=");var v="$"===l?e[0]:"#"===l&&/[boxX]/.test(g)?"0"+g.toLowerCase():"",y="$"===l?e[1]:/[%p]/.test(g)?o:"",m=ct[g],w=/[defgprs%]/.test(g);function _(t){var e,o,l,_=v,b=y;if("c"===g)b=m(t)+b,t="";else{var M=(t=+t)<0;if(t=m(Math.abs(t),p),d&&(t=ut(t)),M&&0==+t&&(M=!1),_=(M?"("===c?c:"-":"-"===c||"("===c?"":c)+_,b=("s"===g?st[8+et/3]:"")+b+(M&&"("===c?")":""),w)for(e=-1,o=t.length;++e<o;)if(48>(l=t.charCodeAt(e))||l>57){b=(46===l?r+t.slice(e+1):t.slice(e))+b,t=t.slice(0,e);break}}h&&!s&&(t=n(t,1/0));var x=_.length+t.length+b.length,A=x<f?new Array(f-x+1).join(u):"";switch(h&&s&&(t=n(A+t,A.length?f-b.length:1/0),A=""),a){case"<":t=_+t+b+A;break;case"=":t=_+A+t+b;break;case"^":t=A.slice(0,x=A.length>>1)+_+t+b+A.slice(x);break;default:t=A+_+t+b}return i(t)}return p=null==p?6:/[gprs]/.test(g)?Math.max(1,Math.min(21,p)):Math.max(0,Math.min(20,p)),_.toString=function(){return t+""},_}return{format:u,formatPrefix:function(t,n){var e=u(((t=tt(t)).type="f",t)),r=3*Math.max(-8,Math.min(8,Math.floor(G(n)/3))),i=Math.pow(10,-r),o=st[8+r/3];return function(t){return e(i*t)+o}}}};!function(t){rt=ft(t),it=rt.format,ot=rt.formatPrefix}({decimal:".",thousands:",",grouping:[3],currency:["$",""]});var ht=function(t,n){return t<n?-1:t>n?1:t>=n?0:NaN},pt=function(t){return 1===t.length&&(t=function(t){return function(n,e){return ht(t(n),e)}}(t)),{left:function(n,e,r,i){for(null==r&&(r=0),null==i&&(i=n.length);r<i;){var o=r+i>>>1;t(n[o],e)<0?r=o+1:i=o}return r},right:function(n,e,r,i){for(null==r&&(r=0),null==i&&(i=n.length);r<i;){var o=r+i>>>1;t(n[o],e)>0?i=o:r=o+1}return r}}};var dt=pt(ht),gt=dt.right,vt=(dt.left,gt);var yt=function(t,n){var e,r,i,o=t.length,u=-1;if(null==n){for(;++u<o;)if(null!=(e=t[u])&&e>=e)for(r=i=e;++u<o;)null!=(e=t[u])&&(r>e&&(r=e),i<e&&(i=e))}else for(;++u<o;)if(null!=(e=n(t[u],u,t))&&e>=e)for(r=i=e;++u<o;)null!=(e=n(t[u],u,t))&&(r>e&&(r=e),i<e&&(i=e));return[r,i]},mt=Array.prototype,wt=(mt.slice,mt.map,Math.sqrt(50)),_t=Math.sqrt(10),bt=Math.sqrt(2),Mt=function(t,n,e){var r,i,o,u,a=-1;if(e=+e,(t=+t)===(n=+n)&&e>0)return[t];if((r=n<t)&&(i=t,t=n,n=i),0===(u=xt(t,n,e))||!isFinite(u))return[];if(u>0)for(t=Math.ceil(t/u),n=Math.floor(n/u),o=new Array(i=Math.ceil(n-t+1));++a<i;)o[a]=(t+a)*u;else for(t=Math.floor(t*u),n=Math.ceil(n*u),o=new Array(i=Math.ceil(t-n+1));++a<i;)o[a]=(t-a)/u;return r&&o.reverse(),o};function xt(t,n,e){var r=(n-t)/Math.max(0,e),i=Math.floor(Math.log(r)/Math.LN10),o=r/Math.pow(10,i);return i>=0?(o>=wt?10:o>=_t?5:o>=bt?2:1)*Math.pow(10,i):-Math.pow(10,-i)/(o>=wt?10:o>=_t?5:o>=bt?2:1)}function At(t,n,e){var r=Math.abs(n-t)/Math.max(0,e),i=Math.pow(10,Math.floor(Math.log(r)/Math.LN10)),o=r/i;return o>=wt?i*=10:o>=_t?i*=5:o>=bt&&(i*=2),n<t?-i:i}function Tt(){}function kt(t,n){var e=new Tt;if(t instanceof Tt)t.each(function(t,n){e.set(n,t)});else if(Array.isArray(t)){var r,i=-1,o=t.length;if(null==n)for(;++i<o;)e.set(i,t[i]);else for(;++i<o;)e.set(n(r=t[i],i,t),r)}else if(t)for(var u in t)e.set(u,t[u]);return e}Tt.prototype=kt.prototype={constructor:Tt,has:function(t){return"$"+t in this},get:function(t){return this["$"+t]},set:function(t,n){return this["$"+t]=n,this},remove:function(t){var n="$"+t;return n in this&&delete this[n]},clear:function(){for(var t in this)"$"===t[0]&&delete this[t]},keys:function(){var t=[];for(var n in this)"$"===n[0]&&t.push(n.slice(1));return t},values:function(){var t=[];for(var n in this)"$"===n[0]&&t.push(this[n]);return t},entries:function(){var t=[];for(var n in this)"$"===n[0]&&t.push({key:n.slice(1),value:this[n]});return t},size:function(){var t=0;for(var n in this)"$"===n[0]&&++t;return t},empty:function(){for(var t in this)if("$"===t[0])return!1;return!0},each:function(t){for(var n in this)"$"===n[0]&&t(this[n],n.slice(1),this)}};var Ct=kt;function Dt(){}var St=Ct.prototype;function Et(t,n){var e=new Dt;if(t instanceof Dt)t.each(function(t){e.add(t)});else if(t){var r=-1,i=t.length;if(null==n)for(;++r<i;)e.add(t[r]);else for(;++r<i;)e.add(n(t[r],r,t))}return e}Dt.prototype=Et.prototype={constructor:Dt,has:St.has,add:function(t){return this["$"+(t+="")]=t,this},remove:St.remove,clear:St.clear,values:St.keys,size:St.size,empty:St.empty,each:St.each};var Nt=Array.prototype,Ut=Nt.map,Ot=Nt.slice,jt={name:"implicit"};function Ht(t){var n=Ct(),e=[],r=jt;function i(i){var o=i+"",u=n.get(o);if(!u){if(r!==jt)return r;n.set(o,u=e.push(i))}return t[(u-1)%t.length]}return t=null==t?[]:Ot.call(t),i.domain=function(t){if(!arguments.length)return e.slice();e=[],n=Ct();for(var r,o,u=-1,a=t.length;++u<a;)n.has(o=(r=t[u])+"")||n.set(o,e.push(r));return i},i.range=function(n){return arguments.length?(t=Ot.call(n),i):t.slice()},i.unknown=function(t){return arguments.length?(r=t,i):r},i.copy=function(){return Ht().domain(e).range(t).unknown(r)},i}var Pt=function(t,n,e){t.prototype=n.prototype=e,e.constructor=t};function Ft(t,n){var e=Object.create(t.prototype);for(var r in n)e[r]=n[r];return e}function Yt(){}var qt="\\s*([+-]?\\d+)\\s*",It="\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)\\s*",Lt="\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)%\\s*",$t=/^#([0-9a-f]{3})$/,Xt=/^#([0-9a-f]{6})$/,zt=new RegExp("^rgb\\("+[qt,qt,qt]+"\\)$"),Rt=new RegExp("^rgb\\("+[Lt,Lt,Lt]+"\\)$"),Vt=new RegExp("^rgba\\("+[qt,qt,qt,It]+"\\)$"),Bt=new RegExp("^rgba\\("+[Lt,Lt,Lt,It]+"\\)$"),Zt=new RegExp("^hsl\\("+[It,Lt,Lt]+"\\)$"),Wt=new RegExp("^hsla\\("+[It,Lt,Lt,It]+"\\)$"),Qt={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};function Jt(t){var n;return t=(t+"").trim().toLowerCase(),(n=$t.exec(t))?new en((n=parseInt(n[1],16))>>8&15|n>>4&240,n>>4&15|240&n,(15&n)<<4|15&n,1):(n=Xt.exec(t))?Gt(parseInt(n[1],16)):(n=zt.exec(t))?new en(n[1],n[2],n[3],1):(n=Rt.exec(t))?new en(255*n[1]/100,255*n[2]/100,255*n[3]/100,1):(n=Vt.exec(t))?Kt(n[1],n[2],n[3],n[4]):(n=Bt.exec(t))?Kt(255*n[1]/100,255*n[2]/100,255*n[3]/100,n[4]):(n=Zt.exec(t))?on(n[1],n[2]/100,n[3]/100,1):(n=Wt.exec(t))?on(n[1],n[2]/100,n[3]/100,n[4]):Qt.hasOwnProperty(t)?Gt(Qt[t]):"transparent"===t?new en(NaN,NaN,NaN,0):null}function Gt(t){return new en(t>>16&255,t>>8&255,255&t,1)}function Kt(t,n,e,r){return r<=0&&(t=n=e=NaN),new en(t,n,e,r)}function tn(t){return t instanceof Yt||(t=Jt(t)),t?new en((t=t.rgb()).r,t.g,t.b,t.opacity):new en}function nn(t,n,e,r){return 1===arguments.length?tn(t):new en(t,n,e,null==r?1:r)}function en(t,n,e,r){this.r=+t,this.g=+n,this.b=+e,this.opacity=+r}function rn(t){return((t=Math.max(0,Math.min(255,Math.round(t)||0)))<16?"0":"")+t.toString(16)}function on(t,n,e,r){return r<=0?t=n=e=NaN:e<=0||e>=1?t=n=NaN:n<=0&&(t=NaN),new an(t,n,e,r)}function un(t,n,e,r){return 1===arguments.length?function(t){if(t instanceof an)return new an(t.h,t.s,t.l,t.opacity);if(t instanceof Yt||(t=Jt(t)),!t)return new an;if(t instanceof an)return t;var n=(t=t.rgb()).r/255,e=t.g/255,r=t.b/255,i=Math.min(n,e,r),o=Math.max(n,e,r),u=NaN,a=o-i,c=(o+i)/2;return a?(u=n===o?(e-r)/a+6*(e<r):e===o?(r-n)/a+2:(n-e)/a+4,a/=c<.5?o+i:2-o-i,u*=60):a=c>0&&c<1?0:u,new an(u,a,c,t.opacity)}(t):new an(t,n,e,null==r?1:r)}function an(t,n,e,r){this.h=+t,this.s=+n,this.l=+e,this.opacity=+r}function cn(t,n,e){return 255*(t<60?n+(e-n)*t/60:t<180?e:t<240?n+(e-n)*(240-t)/60:n)}Pt(Yt,Jt,{displayable:function(){return this.rgb().displayable()},hex:function(){return this.rgb().hex()},toString:function(){return this.rgb()+""}}),Pt(en,nn,Ft(Yt,{brighter:function(t){return t=null==t?1/.7:Math.pow(1/.7,t),new en(this.r*t,this.g*t,this.b*t,this.opacity)},darker:function(t){return t=null==t?.7:Math.pow(.7,t),new en(this.r*t,this.g*t,this.b*t,this.opacity)},rgb:function(){return this},displayable:function(){return 0<=this.r&&this.r<=255&&0<=this.g&&this.g<=255&&0<=this.b&&this.b<=255&&0<=this.opacity&&this.opacity<=1},hex:function(){return"#"+rn(this.r)+rn(this.g)+rn(this.b)},toString:function(){var t=this.opacity;return(1===(t=isNaN(t)?1:Math.max(0,Math.min(1,t)))?"rgb(":"rgba(")+Math.max(0,Math.min(255,Math.round(this.r)||0))+", "+Math.max(0,Math.min(255,Math.round(this.g)||0))+", "+Math.max(0,Math.min(255,Math.round(this.b)||0))+(1===t?")":", "+t+")")}})),Pt(an,un,Ft(Yt,{brighter:function(t){return t=null==t?1/.7:Math.pow(1/.7,t),new an(this.h,this.s,this.l*t,this.opacity)},darker:function(t){return t=null==t?.7:Math.pow(.7,t),new an(this.h,this.s,this.l*t,this.opacity)},rgb:function(){var t=this.h%360+360*(this.h<0),n=isNaN(t)||isNaN(this.s)?0:this.s,e=this.l,r=e+(e<.5?e:1-e)*n,i=2*e-r;return new en(cn(t>=240?t-240:t+120,i,r),cn(t,i,r),cn(t<120?t+240:t-120,i,r),this.opacity)},displayable:function(){return(0<=this.s&&this.s<=1||isNaN(this.s))&&0<=this.l&&this.l<=1&&0<=this.opacity&&this.opacity<=1}}));var ln=Math.PI/180,sn=180/Math.PI,fn=.96422,hn=1,pn=.82521,dn=4/29,gn=6/29,vn=3*gn*gn,yn=gn*gn*gn;function mn(t){if(t instanceof _n)return new _n(t.l,t.a,t.b,t.opacity);if(t instanceof Cn){if(isNaN(t.h))return new _n(t.l,0,0,t.opacity);var n=t.h*ln;return new _n(t.l,Math.cos(n)*t.c,Math.sin(n)*t.c,t.opacity)}t instanceof en||(t=tn(t));var e,r,i=An(t.r),o=An(t.g),u=An(t.b),a=bn((.2225045*i+.7168786*o+.0606169*u)/hn);return i===o&&o===u?e=r=a:(e=bn((.4360747*i+.3850649*o+.1430804*u)/fn),r=bn((.0139322*i+.0971045*o+.7141733*u)/pn)),new _n(116*a-16,500*(e-a),200*(a-r),t.opacity)}function wn(t,n,e,r){return 1===arguments.length?mn(t):new _n(t,n,e,null==r?1:r)}function _n(t,n,e,r){this.l=+t,this.a=+n,this.b=+e,this.opacity=+r}function bn(t){return t>yn?Math.pow(t,1/3):t/vn+dn}function Mn(t){return t>gn?t*t*t:vn*(t-dn)}function xn(t){return 255*(t<=.0031308?12.92*t:1.055*Math.pow(t,1/2.4)-.055)}function An(t){return(t/=255)<=.04045?t/12.92:Math.pow((t+.055)/1.055,2.4)}function Tn(t){if(t instanceof Cn)return new Cn(t.h,t.c,t.l,t.opacity);if(t instanceof _n||(t=mn(t)),0===t.a&&0===t.b)return new Cn(NaN,0,t.l,t.opacity);var n=Math.atan2(t.b,t.a)*sn;return new Cn(n<0?n+360:n,Math.sqrt(t.a*t.a+t.b*t.b),t.l,t.opacity)}function kn(t,n,e,r){return 1===arguments.length?Tn(t):new Cn(t,n,e,null==r?1:r)}function Cn(t,n,e,r){this.h=+t,this.c=+n,this.l=+e,this.opacity=+r}Pt(_n,wn,Ft(Yt,{brighter:function(t){return new _n(this.l+18*(null==t?1:t),this.a,this.b,this.opacity)},darker:function(t){return new _n(this.l-18*(null==t?1:t),this.a,this.b,this.opacity)},rgb:function(){var t=(this.l+16)/116,n=isNaN(this.a)?t:t+this.a/500,e=isNaN(this.b)?t:t-this.b/200;return new en(xn(3.1338561*(n=fn*Mn(n))-1.6168667*(t=hn*Mn(t))-.4906146*(e=pn*Mn(e))),xn(-.9787684*n+1.9161415*t+.033454*e),xn(.0719453*n-.2289914*t+1.4052427*e),this.opacity)}})),Pt(Cn,kn,Ft(Yt,{brighter:function(t){return new Cn(this.h,this.c,this.l+18*(null==t?1:t),this.opacity)},darker:function(t){return new Cn(this.h,this.c,this.l-18*(null==t?1:t),this.opacity)},rgb:function(){return mn(this).rgb()}}));var Dn=-.14861,Sn=1.78277,En=-.29227,Nn=-.90649,Un=1.97294,On=Un*Nn,jn=Un*Sn,Hn=Sn*En-Nn*Dn;function Pn(t,n,e,r){return 1===arguments.length?function(t){if(t instanceof Fn)return new Fn(t.h,t.s,t.l,t.opacity);t instanceof en||(t=tn(t));var n=t.r/255,e=t.g/255,r=t.b/255,i=(Hn*r+On*n-jn*e)/(Hn+On-jn),o=r-i,u=(Un*(e-i)-En*o)/Nn,a=Math.sqrt(u*u+o*o)/(Un*i*(1-i)),c=a?Math.atan2(u,o)*sn-120:NaN;return new Fn(c<0?c+360:c,a,i,t.opacity)}(t):new Fn(t,n,e,null==r?1:r)}function Fn(t,n,e,r){this.h=+t,this.s=+n,this.l=+e,this.opacity=+r}function Yn(t,n,e,r,i){var o=t*t,u=o*t;return((1-3*t+3*o-u)*n+(4-6*o+3*u)*e+(1+3*t+3*o-3*u)*r+u*i)/6}Pt(Fn,Pn,Ft(Yt,{brighter:function(t){return t=null==t?1/.7:Math.pow(1/.7,t),new Fn(this.h,this.s,this.l*t,this.opacity)},darker:function(t){return t=null==t?.7:Math.pow(.7,t),new Fn(this.h,this.s,this.l*t,this.opacity)},rgb:function(){var t=isNaN(this.h)?0:(this.h+120)*ln,n=+this.l,e=isNaN(this.s)?0:this.s*n*(1-n),r=Math.cos(t),i=Math.sin(t);return new en(255*(n+e*(Dn*r+Sn*i)),255*(n+e*(En*r+Nn*i)),255*(n+e*(Un*r)),this.opacity)}}));var qn=function(t){return function(){return t}};function In(t,n){return function(e){return t+e*n}}function Ln(t,n){var e=n-t;return e?In(t,e>180||e<-180?e-360*Math.round(e/360):e):qn(isNaN(t)?n:t)}function $n(t){return 1==(t=+t)?Xn:function(n,e){return e-n?function(t,n,e){return t=Math.pow(t,e),n=Math.pow(n,e)-t,e=1/e,function(r){return Math.pow(t+r*n,e)}}(n,e,t):qn(isNaN(n)?e:n)}}function Xn(t,n){var e=n-t;return e?In(t,e):qn(isNaN(t)?n:t)}var zn=function t(n){var e=$n(n);function r(t,n){var r=e((t=nn(t)).r,(n=nn(n)).r),i=e(t.g,n.g),o=e(t.b,n.b),u=Xn(t.opacity,n.opacity);return function(n){return t.r=r(n),t.g=i(n),t.b=o(n),t.opacity=u(n),t+""}}return r.gamma=t,r}(1);function Rn(t){return function(n){var e,r,i=n.length,o=new Array(i),u=new Array(i),a=new Array(i);for(e=0;e<i;++e)r=nn(n[e]),o[e]=r.r||0,u[e]=r.g||0,a[e]=r.b||0;return o=t(o),u=t(u),a=t(a),r.opacity=1,function(t){return r.r=o(t),r.g=u(t),r.b=a(t),r+""}}}Rn(function(t){var n=t.length-1;return function(e){var r=e<=0?e=0:e>=1?(e=1,n-1):Math.floor(e*n),i=t[r],o=t[r+1],u=r>0?t[r-1]:2*i-o,a=r<n-1?t[r+2]:2*o-i;return Yn((e-r/n)*n,u,i,o,a)}}),Rn(function(t){var n=t.length;return function(e){var r=Math.floor(((e%=1)<0?++e:e)*n),i=t[(r+n-1)%n],o=t[r%n],u=t[(r+1)%n],a=t[(r+2)%n];return Yn((e-r/n)*n,i,o,u,a)}});var Vn=function(t,n){return n-=t=+t,function(e){return t+n*e}},Bn=/[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,Zn=new RegExp(Bn.source,"g");var Wn,Qn,Jn,Gn,Kn=function(t,n){var e,r,i,o=Bn.lastIndex=Zn.lastIndex=0,u=-1,a=[],c=[];for(t+="",n+="";(e=Bn.exec(t))&&(r=Zn.exec(n));)(i=r.index)>o&&(i=n.slice(o,i),a[u]?a[u]+=i:a[++u]=i),(e=e[0])===(r=r[0])?a[u]?a[u]+=r:a[++u]=r:(a[++u]=null,c.push({i:u,x:Vn(e,r)})),o=Zn.lastIndex;return o<n.length&&(i=n.slice(o),a[u]?a[u]+=i:a[++u]=i),a.length<2?c[0]?function(t){return function(n){return t(n)+""}}(c[0].x):function(t){return function(){return t}}(n):(n=c.length,function(t){for(var e,r=0;r<n;++r)a[(e=c[r]).i]=e.x(t);return a.join("")})},te=function(t,n){var e,r=typeof n;return null==n||"boolean"===r?qn(n):("number"===r?Vn:"string"===r?(e=Jt(n))?(n=e,zn):Kn:n instanceof Jt?zn:n instanceof Date?function(t,n){var e=new Date;return n-=t=+t,function(r){return e.setTime(t+n*r),e}}:Array.isArray(n)?function(t,n){var e,r=n?n.length:0,i=t?Math.min(r,t.length):0,o=new Array(i),u=new Array(r);for(e=0;e<i;++e)o[e]=te(t[e],n[e]);for(;e<r;++e)u[e]=n[e];return function(t){for(e=0;e<i;++e)u[e]=o[e](t);return u}}:"function"!=typeof n.valueOf&&"function"!=typeof n.toString||isNaN(n)?function(t,n){var e,r={},i={};for(e in null!==t&&"object"==typeof t||(t={}),null!==n&&"object"==typeof n||(n={}),n)e in t?r[e]=te(t[e],n[e]):i[e]=n[e];return function(t){for(e in r)i[e]=r[e](t);return i}}:Vn)(t,n)},ne=function(t,n){return n-=t=+t,function(e){return Math.round(t+n*e)}},ee=180/Math.PI,re={translateX:0,translateY:0,rotate:0,skewX:0,scaleX:1,scaleY:1},ie=function(t,n,e,r,i,o){var u,a,c;return(u=Math.sqrt(t*t+n*n))&&(t/=u,n/=u),(c=t*e+n*r)&&(e-=t*c,r-=n*c),(a=Math.sqrt(e*e+r*r))&&(e/=a,r/=a,c/=a),t*r<n*e&&(t=-t,n=-n,c=-c,u=-u),{translateX:i,translateY:o,rotate:Math.atan2(n,t)*ee,skewX:Math.atan(c)*ee,scaleX:u,scaleY:a}};function oe(t,n,e,r){function i(t){return t.length?t.pop()+" ":""}return function(o,u){var a=[],c=[];return o=t(o),u=t(u),function(t,r,i,o,u,a){if(t!==i||r!==o){var c=u.push("translate(",null,n,null,e);a.push({i:c-4,x:Vn(t,i)},{i:c-2,x:Vn(r,o)})}else(i||o)&&u.push("translate("+i+n+o+e)}(o.translateX,o.translateY,u.translateX,u.translateY,a,c),function(t,n,e,o){t!==n?(t-n>180?n+=360:n-t>180&&(t+=360),o.push({i:e.push(i(e)+"rotate(",null,r)-2,x:Vn(t,n)})):n&&e.push(i(e)+"rotate("+n+r)}(o.rotate,u.rotate,a,c),function(t,n,e,o){t!==n?o.push({i:e.push(i(e)+"skewX(",null,r)-2,x:Vn(t,n)}):n&&e.push(i(e)+"skewX("+n+r)}(o.skewX,u.skewX,a,c),function(t,n,e,r,o,u){if(t!==e||n!==r){var a=o.push(i(o)+"scale(",null,",",null,")");u.push({i:a-4,x:Vn(t,e)},{i:a-2,x:Vn(n,r)})}else 1===e&&1===r||o.push(i(o)+"scale("+e+","+r+")")}(o.scaleX,o.scaleY,u.scaleX,u.scaleY,a,c),o=u=null,function(t){for(var n,e=-1,r=c.length;++e<r;)a[(n=c[e]).i]=n.x(t);return a.join("")}}}var ue=oe(function(t){return"none"===t?re:(Wn||(Wn=document.createElement("DIV"),Qn=document.documentElement,Jn=document.defaultView),Wn.style.transform=t,t=Jn.getComputedStyle(Qn.appendChild(Wn),null).getPropertyValue("transform"),Qn.removeChild(Wn),t=t.slice(7,-1).split(","),ie(+t[0],+t[1],+t[2],+t[3],+t[4],+t[5]))},"px, ","px)","deg)"),ae=oe(function(t){return null==t?re:(Gn||(Gn=document.createElementNS("http://www.w3.org/2000/svg","g")),Gn.setAttribute("transform",t),(t=Gn.transform.baseVal.consolidate())?(t=t.matrix,ie(t.a,t.b,t.c,t.d,t.e,t.f)):re)},", ",")",")");Math.SQRT2;function ce(t){return function(n,e){var r=t((n=un(n)).h,(e=un(e)).h),i=Xn(n.s,e.s),o=Xn(n.l,e.l),u=Xn(n.opacity,e.opacity);return function(t){return n.h=r(t),n.s=i(t),n.l=o(t),n.opacity=u(t),n+""}}}ce(Ln),ce(Xn);function le(t){return function(n,e){var r=t((n=kn(n)).h,(e=kn(e)).h),i=Xn(n.c,e.c),o=Xn(n.l,e.l),u=Xn(n.opacity,e.opacity);return function(t){return n.h=r(t),n.c=i(t),n.l=o(t),n.opacity=u(t),n+""}}}le(Ln),le(Xn);function se(t){return function n(e){function r(n,r){var i=t((n=Pn(n)).h,(r=Pn(r)).h),o=Xn(n.s,r.s),u=Xn(n.l,r.l),a=Xn(n.opacity,r.opacity);return function(t){return n.h=i(t),n.s=o(t),n.l=u(Math.pow(t,e)),n.opacity=a(t),n+""}}return e=+e,r.gamma=n,r}(1)}se(Ln),se(Xn);var fe=function(t){return function(){return t}},he=function(t){return+t},pe=[0,1];function de(t,n){return(n-=t=+t)?function(e){return(e-t)/n}:fe(n)}function ge(t,n,e,r){var i=t[0],o=t[1],u=n[0],a=n[1];return o<i?(i=e(o,i),u=r(a,u)):(i=e(i,o),u=r(u,a)),function(t){return u(i(t))}}function ve(t,n,e,r){var i=Math.min(t.length,n.length)-1,o=new Array(i),u=new Array(i),a=-1;for(t[i]<t[0]&&(t=t.slice().reverse(),n=n.slice().reverse());++a<i;)o[a]=e(t[a],t[a+1]),u[a]=r(n[a],n[a+1]);return function(n){var e=vt(t,n,1,i)-1;return u[e](o[e](n))}}function ye(t,n){return n.domain(t.domain()).range(t.range()).interpolate(t.interpolate()).clamp(t.clamp())}function me(t,n){var e,r,i,o=pe,u=pe,a=te,c=!1;function l(){return e=Math.min(o.length,u.length)>2?ve:ge,r=i=null,s}function s(n){return(r||(r=e(o,u,c?function(t){return function(n,e){var r=t(n=+n,e=+e);return function(t){return t<=n?0:t>=e?1:r(t)}}}(t):t,a)))(+n)}return s.invert=function(t){return(i||(i=e(u,o,de,c?function(t){return function(n,e){var r=t(n=+n,e=+e);return function(t){return t<=0?n:t>=1?e:r(t)}}}(n):n)))(+t)},s.domain=function(t){return arguments.length?(o=Ut.call(t,he),l()):o.slice()},s.range=function(t){return arguments.length?(u=Ot.call(t),l()):u.slice()},s.rangeRound=function(t){return u=Ot.call(t),a=ne,l()},s.clamp=function(t){return arguments.length?(c=!!t,l()):c},s.interpolate=function(t){return arguments.length?(a=t,l()):a},l()}var we=function(t,n,e){var r,i=t[0],o=t[t.length-1],u=At(i,o,null==n?10:n);switch((e=tt(null==e?",f":e)).type){case"s":var a=Math.max(Math.abs(i),Math.abs(o));return null!=e.precision||isNaN(r=function(t,n){return Math.max(0,3*Math.max(-8,Math.min(8,Math.floor(G(n)/3)))-G(Math.abs(t)))}(u,a))||(e.precision=r),ot(e,a);case"":case"e":case"g":case"p":case"r":null!=e.precision||isNaN(r=function(t,n){return t=Math.abs(t),n=Math.abs(n)-t,Math.max(0,G(n)-G(t))+1}(u,Math.max(Math.abs(i),Math.abs(o))))||(e.precision=r-("e"===e.type));break;case"f":case"%":null!=e.precision||isNaN(r=function(t){return Math.max(0,-G(Math.abs(t)))}(u))||(e.precision=r-2*("%"===e.type))}return it(e)};function _e(t){var n=t.domain;return t.ticks=function(t){var e=n();return Mt(e[0],e[e.length-1],null==t?10:t)},t.tickFormat=function(t,e){return we(n(),t,e)},t.nice=function(e){null==e&&(e=10);var r,i=n(),o=0,u=i.length-1,a=i[o],c=i[u];return c<a&&(r=a,a=c,c=r,r=o,o=u,u=r),(r=xt(a,c,e))>0?r=xt(a=Math.floor(a/r)*r,c=Math.ceil(c/r)*r,e):r<0&&(r=xt(a=Math.ceil(a*r)/r,c=Math.floor(c*r)/r,e)),r>0?(i[o]=Math.floor(a/r)*r,i[u]=Math.ceil(c/r)*r,n(i)):r<0&&(i[o]=Math.ceil(a*r)/r,i[u]=Math.floor(c*r)/r,n(i)),t},t}var be=new Date,Me=new Date;function xe(t,n,e,r){function i(n){return t(n=new Date(+n)),n}return i.floor=i,i.ceil=function(e){return t(e=new Date(e-1)),n(e,1),t(e),e},i.round=function(t){var n=i(t),e=i.ceil(t);return t-n<e-t?n:e},i.offset=function(t,e){return n(t=new Date(+t),null==e?1:Math.floor(e)),t},i.range=function(e,r,o){var u,a=[];if(e=i.ceil(e),o=null==o?1:Math.floor(o),!(e<r&&o>0))return a;do{a.push(u=new Date(+e)),n(e,o),t(e)}while(u<e&&e<r);return a},i.filter=function(e){return xe(function(n){if(n>=n)for(;t(n),!e(n);)n.setTime(n-1)},function(t,r){if(t>=t)if(r<0)for(;++r<=0;)for(;n(t,-1),!e(t););else for(;--r>=0;)for(;n(t,1),!e(t););})},e&&(i.count=function(n,r){return be.setTime(+n),Me.setTime(+r),t(be),t(Me),Math.floor(e(be,Me))},i.every=function(t){return t=Math.floor(t),isFinite(t)&&t>0?t>1?i.filter(r?function(n){return r(n)%t==0}:function(n){return i.count(0,n)%t==0}):i:null}),i}var Ae=xe(function(){},function(t,n){t.setTime(+t+n)},function(t,n){return n-t});Ae.every=function(t){return t=Math.floor(t),isFinite(t)&&t>0?t>1?xe(function(n){n.setTime(Math.floor(n/t)*t)},function(n,e){n.setTime(+n+e*t)},function(n,e){return(e-n)/t}):Ae:null};Ae.range;var Te=6e4,ke=6048e5,Ce=xe(function(t){t.setTime(1e3*Math.floor(t/1e3))},function(t,n){t.setTime(+t+1e3*n)},function(t,n){return(n-t)/1e3},function(t){return t.getUTCSeconds()}),De=(Ce.range,xe(function(t){t.setTime(Math.floor(t/Te)*Te)},function(t,n){t.setTime(+t+n*Te)},function(t,n){return(n-t)/Te},function(t){return t.getMinutes()})),Se=(De.range,xe(function(t){var n=t.getTimezoneOffset()*Te%36e5;n<0&&(n+=36e5),t.setTime(36e5*Math.floor((+t-n)/36e5)+n)},function(t,n){t.setTime(+t+36e5*n)},function(t,n){return(n-t)/36e5},function(t){return t.getHours()})),Ee=(Se.range,xe(function(t){t.setHours(0,0,0,0)},function(t,n){t.setDate(t.getDate()+n)},function(t,n){return(n-t-(n.getTimezoneOffset()-t.getTimezoneOffset())*Te)/864e5},function(t){return t.getDate()-1})),Ne=Ee;Ee.range;function Ue(t){return xe(function(n){n.setDate(n.getDate()-(n.getDay()+7-t)%7),n.setHours(0,0,0,0)},function(t,n){t.setDate(t.getDate()+7*n)},function(t,n){return(n-t-(n.getTimezoneOffset()-t.getTimezoneOffset())*Te)/ke})}var Oe=Ue(0),je=Ue(1),He=Ue(2),Pe=Ue(3),Fe=Ue(4),Ye=Ue(5),qe=Ue(6),Ie=(Oe.range,je.range,He.range,Pe.range,Fe.range,Ye.range,qe.range,xe(function(t){t.setDate(1),t.setHours(0,0,0,0)},function(t,n){t.setMonth(t.getMonth()+n)},function(t,n){return n.getMonth()-t.getMonth()+12*(n.getFullYear()-t.getFullYear())},function(t){return t.getMonth()})),Le=(Ie.range,xe(function(t){t.setMonth(0,1),t.setHours(0,0,0,0)},function(t,n){t.setFullYear(t.getFullYear()+n)},function(t,n){return n.getFullYear()-t.getFullYear()},function(t){return t.getFullYear()}));Le.every=function(t){return isFinite(t=Math.floor(t))&&t>0?xe(function(n){n.setFullYear(Math.floor(n.getFullYear()/t)*t),n.setMonth(0,1),n.setHours(0,0,0,0)},function(n,e){n.setFullYear(n.getFullYear()+e*t)}):null};var $e=Le,Xe=(Le.range,xe(function(t){t.setUTCSeconds(0,0)},function(t,n){t.setTime(+t+n*Te)},function(t,n){return(n-t)/Te},function(t){return t.getUTCMinutes()})),ze=(Xe.range,xe(function(t){t.setUTCMinutes(0,0,0)},function(t,n){t.setTime(+t+36e5*n)},function(t,n){return(n-t)/36e5},function(t){return t.getUTCHours()})),Re=(ze.range,xe(function(t){t.setUTCHours(0,0,0,0)},function(t,n){t.setUTCDate(t.getUTCDate()+n)},function(t,n){return(n-t)/864e5},function(t){return t.getUTCDate()-1})),Ve=Re;Re.range;function Be(t){return xe(function(n){n.setUTCDate(n.getUTCDate()-(n.getUTCDay()+7-t)%7),n.setUTCHours(0,0,0,0)},function(t,n){t.setUTCDate(t.getUTCDate()+7*n)},function(t,n){return(n-t)/ke})}var Ze=Be(0),We=Be(1),Qe=Be(2),Je=Be(3),Ge=Be(4),Ke=Be(5),tr=Be(6),nr=(Ze.range,We.range,Qe.range,Je.range,Ge.range,Ke.range,tr.range,xe(function(t){t.setUTCDate(1),t.setUTCHours(0,0,0,0)},function(t,n){t.setUTCMonth(t.getUTCMonth()+n)},function(t,n){return n.getUTCMonth()-t.getUTCMonth()+12*(n.getUTCFullYear()-t.getUTCFullYear())},function(t){return t.getUTCMonth()})),er=(nr.range,xe(function(t){t.setUTCMonth(0,1),t.setUTCHours(0,0,0,0)},function(t,n){t.setUTCFullYear(t.getUTCFullYear()+n)},function(t,n){return n.getUTCFullYear()-t.getUTCFullYear()},function(t){return t.getUTCFullYear()}));er.every=function(t){return isFinite(t=Math.floor(t))&&t>0?xe(function(n){n.setUTCFullYear(Math.floor(n.getUTCFullYear()/t)*t),n.setUTCMonth(0,1),n.setUTCHours(0,0,0,0)},function(n,e){n.setUTCFullYear(n.getUTCFullYear()+e*t)}):null};var rr=er;er.range;function ir(t){if(0<=t.y&&t.y<100){var n=new Date(-1,t.m,t.d,t.H,t.M,t.S,t.L);return n.setFullYear(t.y),n}return new Date(t.y,t.m,t.d,t.H,t.M,t.S,t.L)}function or(t){if(0<=t.y&&t.y<100){var n=new Date(Date.UTC(-1,t.m,t.d,t.H,t.M,t.S,t.L));return n.setUTCFullYear(t.y),n}return new Date(Date.UTC(t.y,t.m,t.d,t.H,t.M,t.S,t.L))}function ur(t){return{y:t,m:0,d:1,H:0,M:0,S:0,L:0}}var ar,cr,lr,sr={"-":"",_:" ",0:"0"},fr=/^\s*\d+/,hr=/^%/,pr=/[\\^$*+?|[\]().{}]/g;function dr(t,n,e){var r=t<0?"-":"",i=(r?-t:t)+"",o=i.length;return r+(o<e?new Array(e-o+1).join(n)+i:i)}function gr(t){return t.replace(pr,"\\$&")}function vr(t){return new RegExp("^(?:"+t.map(gr).join("|")+")","i")}function yr(t){for(var n={},e=-1,r=t.length;++e<r;)n[t[e].toLowerCase()]=e;return n}function mr(t,n,e){var r=fr.exec(n.slice(e,e+1));return r?(t.w=+r[0],e+r[0].length):-1}function wr(t,n,e){var r=fr.exec(n.slice(e,e+1));return r?(t.u=+r[0],e+r[0].length):-1}function _r(t,n,e){var r=fr.exec(n.slice(e,e+2));return r?(t.U=+r[0],e+r[0].length):-1}function br(t,n,e){var r=fr.exec(n.slice(e,e+2));return r?(t.V=+r[0],e+r[0].length):-1}function Mr(t,n,e){var r=fr.exec(n.slice(e,e+2));return r?(t.W=+r[0],e+r[0].length):-1}function xr(t,n,e){var r=fr.exec(n.slice(e,e+4));return r?(t.y=+r[0],e+r[0].length):-1}function Ar(t,n,e){var r=fr.exec(n.slice(e,e+2));return r?(t.y=+r[0]+(+r[0]>68?1900:2e3),e+r[0].length):-1}function Tr(t,n,e){var r=/^(Z)|([+-]\d\d)(?::?(\d\d))?/.exec(n.slice(e,e+6));return r?(t.Z=r[1]?0:-(r[2]+(r[3]||"00")),e+r[0].length):-1}function kr(t,n,e){var r=fr.exec(n.slice(e,e+2));return r?(t.m=r[0]-1,e+r[0].length):-1}function Cr(t,n,e){var r=fr.exec(n.slice(e,e+2));return r?(t.d=+r[0],e+r[0].length):-1}function Dr(t,n,e){var r=fr.exec(n.slice(e,e+3));return r?(t.m=0,t.d=+r[0],e+r[0].length):-1}function Sr(t,n,e){var r=fr.exec(n.slice(e,e+2));return r?(t.H=+r[0],e+r[0].length):-1}function Er(t,n,e){var r=fr.exec(n.slice(e,e+2));return r?(t.M=+r[0],e+r[0].length):-1}function Nr(t,n,e){var r=fr.exec(n.slice(e,e+2));return r?(t.S=+r[0],e+r[0].length):-1}function Ur(t,n,e){var r=fr.exec(n.slice(e,e+3));return r?(t.L=+r[0],e+r[0].length):-1}function Or(t,n,e){var r=fr.exec(n.slice(e,e+6));return r?(t.L=Math.floor(r[0]/1e3),e+r[0].length):-1}function jr(t,n,e){var r=hr.exec(n.slice(e,e+1));return r?e+r[0].length:-1}function Hr(t,n,e){var r=fr.exec(n.slice(e));return r?(t.Q=+r[0],e+r[0].length):-1}function Pr(t,n,e){var r=fr.exec(n.slice(e));return r?(t.Q=1e3*+r[0],e+r[0].length):-1}function Fr(t,n){return dr(t.getDate(),n,2)}function Yr(t,n){return dr(t.getHours(),n,2)}function qr(t,n){return dr(t.getHours()%12||12,n,2)}function Ir(t,n){return dr(1+Ne.count($e(t),t),n,3)}function Lr(t,n){return dr(t.getMilliseconds(),n,3)}function $r(t,n){return Lr(t,n)+"000"}function Xr(t,n){return dr(t.getMonth()+1,n,2)}function zr(t,n){return dr(t.getMinutes(),n,2)}function Rr(t,n){return dr(t.getSeconds(),n,2)}function Vr(t){var n=t.getDay();return 0===n?7:n}function Br(t,n){return dr(Oe.count($e(t),t),n,2)}function Zr(t,n){var e=t.getDay();return t=e>=4||0===e?Fe(t):Fe.ceil(t),dr(Fe.count($e(t),t)+(4===$e(t).getDay()),n,2)}function Wr(t){return t.getDay()}function Qr(t,n){return dr(je.count($e(t),t),n,2)}function Jr(t,n){return dr(t.getFullYear()%100,n,2)}function Gr(t,n){return dr(t.getFullYear()%1e4,n,4)}function Kr(t){var n=t.getTimezoneOffset();return(n>0?"-":(n*=-1,"+"))+dr(n/60|0,"0",2)+dr(n%60,"0",2)}function ti(t,n){return dr(t.getUTCDate(),n,2)}function ni(t,n){return dr(t.getUTCHours(),n,2)}function ei(t,n){return dr(t.getUTCHours()%12||12,n,2)}function ri(t,n){return dr(1+Ve.count(rr(t),t),n,3)}function ii(t,n){return dr(t.getUTCMilliseconds(),n,3)}function oi(t,n){return ii(t,n)+"000"}function ui(t,n){return dr(t.getUTCMonth()+1,n,2)}function ai(t,n){return dr(t.getUTCMinutes(),n,2)}function ci(t,n){return dr(t.getUTCSeconds(),n,2)}function li(t){var n=t.getUTCDay();return 0===n?7:n}function si(t,n){return dr(Ze.count(rr(t),t),n,2)}function fi(t,n){var e=t.getUTCDay();return t=e>=4||0===e?Ge(t):Ge.ceil(t),dr(Ge.count(rr(t),t)+(4===rr(t).getUTCDay()),n,2)}function hi(t){return t.getUTCDay()}function pi(t,n){return dr(We.count(rr(t),t),n,2)}function di(t,n){return dr(t.getUTCFullYear()%100,n,2)}function gi(t,n){return dr(t.getUTCFullYear()%1e4,n,4)}function vi(){return"+0000"}function yi(){return"%"}function mi(t){return+t}function wi(t){return Math.floor(+t/1e3)}!function(t){ar=function(t){var n=t.dateTime,e=t.date,r=t.time,i=t.periods,o=t.days,u=t.shortDays,a=t.months,c=t.shortMonths,l=vr(i),s=yr(i),f=vr(o),h=yr(o),p=vr(u),d=yr(u),g=vr(a),v=yr(a),y=vr(c),m=yr(c),w={a:function(t){return u[t.getDay()]},A:function(t){return o[t.getDay()]},b:function(t){return c[t.getMonth()]},B:function(t){return a[t.getMonth()]},c:null,d:Fr,e:Fr,f:$r,H:Yr,I:qr,j:Ir,L:Lr,m:Xr,M:zr,p:function(t){return i[+(t.getHours()>=12)]},Q:mi,s:wi,S:Rr,u:Vr,U:Br,V:Zr,w:Wr,W:Qr,x:null,X:null,y:Jr,Y:Gr,Z:Kr,"%":yi},_={a:function(t){return u[t.getUTCDay()]},A:function(t){return o[t.getUTCDay()]},b:function(t){return c[t.getUTCMonth()]},B:function(t){return a[t.getUTCMonth()]},c:null,d:ti,e:ti,f:oi,H:ni,I:ei,j:ri,L:ii,m:ui,M:ai,p:function(t){return i[+(t.getUTCHours()>=12)]},Q:mi,s:wi,S:ci,u:li,U:si,V:fi,w:hi,W:pi,x:null,X:null,y:di,Y:gi,Z:vi,"%":yi},b={a:function(t,n,e){var r=p.exec(n.slice(e));return r?(t.w=d[r[0].toLowerCase()],e+r[0].length):-1},A:function(t,n,e){var r=f.exec(n.slice(e));return r?(t.w=h[r[0].toLowerCase()],e+r[0].length):-1},b:function(t,n,e){var r=y.exec(n.slice(e));return r?(t.m=m[r[0].toLowerCase()],e+r[0].length):-1},B:function(t,n,e){var r=g.exec(n.slice(e));return r?(t.m=v[r[0].toLowerCase()],e+r[0].length):-1},c:function(t,e,r){return A(t,n,e,r)},d:Cr,e:Cr,f:Or,H:Sr,I:Sr,j:Dr,L:Ur,m:kr,M:Er,p:function(t,n,e){var r=l.exec(n.slice(e));return r?(t.p=s[r[0].toLowerCase()],e+r[0].length):-1},Q:Hr,s:Pr,S:Nr,u:wr,U:_r,V:br,w:mr,W:Mr,x:function(t,n,r){return A(t,e,n,r)},X:function(t,n,e){return A(t,r,n,e)},y:Ar,Y:xr,Z:Tr,"%":jr};function M(t,n){return function(e){var r,i,o,u=[],a=-1,c=0,l=t.length;for(e instanceof Date||(e=new Date(+e));++a<l;)37===t.charCodeAt(a)&&(u.push(t.slice(c,a)),null!=(i=sr[r=t.charAt(++a)])?r=t.charAt(++a):i="e"===r?" ":"0",(o=n[r])&&(r=o(e,i)),u.push(r),c=a+1);return u.push(t.slice(c,a)),u.join("")}}function x(t,n){return function(e){var r,i,o=ur(1900);if(A(o,t,e+="",0)!=e.length)return null;if("Q"in o)return new Date(o.Q);if("p"in o&&(o.H=o.H%12+12*o.p),"V"in o){if(o.V<1||o.V>53)return null;"w"in o||(o.w=1),"Z"in o?(r=(i=(r=or(ur(o.y))).getUTCDay())>4||0===i?We.ceil(r):We(r),r=Ve.offset(r,7*(o.V-1)),o.y=r.getUTCFullYear(),o.m=r.getUTCMonth(),o.d=r.getUTCDate()+(o.w+6)%7):(r=(i=(r=n(ur(o.y))).getDay())>4||0===i?je.ceil(r):je(r),r=Ne.offset(r,7*(o.V-1)),o.y=r.getFullYear(),o.m=r.getMonth(),o.d=r.getDate()+(o.w+6)%7)}else("W"in o||"U"in o)&&("w"in o||(o.w="u"in o?o.u%7:"W"in o?1:0),i="Z"in o?or(ur(o.y)).getUTCDay():n(ur(o.y)).getDay(),o.m=0,o.d="W"in o?(o.w+6)%7+7*o.W-(i+5)%7:o.w+7*o.U-(i+6)%7);return"Z"in o?(o.H+=o.Z/100|0,o.M+=o.Z%100,or(o)):n(o)}}function A(t,n,e,r){for(var i,o,u=0,a=n.length,c=e.length;u<a;){if(r>=c)return-1;if(37===(i=n.charCodeAt(u++))){if(i=n.charAt(u++),!(o=b[i in sr?n.charAt(u++):i])||(r=o(t,e,r))<0)return-1}else if(i!=e.charCodeAt(r++))return-1}return r}return w.x=M(e,w),w.X=M(r,w),w.c=M(n,w),_.x=M(e,_),_.X=M(r,_),_.c=M(n,_),{format:function(t){var n=M(t+="",w);return n.toString=function(){return t},n},parse:function(t){var n=x(t+="",ir);return n.toString=function(){return t},n},utcFormat:function(t){var n=M(t+="",_);return n.toString=function(){return t},n},utcParse:function(t){var n=x(t,or);return n.toString=function(){return t},n}}}(t),ar.format,ar.parse,cr=ar.utcFormat,lr=ar.utcParse}({dateTime:"%x, %X",date:"%-m/%-d/%Y",time:"%-I:%M:%S %p",periods:["AM","PM"],days:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],shortDays:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],months:["January","February","March","April","May","June","July","August","September","October","November","December"],shortMonths:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]});Date.prototype.toISOString||cr("%Y-%m-%dT%H:%M:%S.%LZ");+new Date("2000-01-01T00:00:00.000Z")||lr("%Y-%m-%dT%H:%M:%S.%LZ");var _i={value:function(){}};function bi(){for(var t,n=0,e=arguments.length,r={};n<e;++n){if(!(t=arguments[n]+"")||t in r)throw new Error("illegal type: "+t);r[t]=[]}return new Mi(r)}function Mi(t){this._=t}function xi(t,n){for(var e,r=0,i=t.length;r<i;++r)if((e=t[r]).name===n)return e.value}function Ai(t,n,e){for(var r=0,i=t.length;r<i;++r)if(t[r].name===n){t[r]=_i,t=t.slice(0,r).concat(t.slice(r+1));break}return null!=e&&t.push({name:n,value:e}),t}Mi.prototype=bi.prototype={constructor:Mi,on:function(t,n){var e,r=this._,i=function(t,n){return t.trim().split(/^|\s+/).map(function(t){var e="",r=t.indexOf(".");if(r>=0&&(e=t.slice(r+1),t=t.slice(0,r)),t&&!n.hasOwnProperty(t))throw new Error("unknown type: "+t);return{type:t,name:e}})}(t+"",r),o=-1,u=i.length;if(!(arguments.length<2)){if(null!=n&&"function"!=typeof n)throw new Error("invalid callback: "+n);for(;++o<u;)if(e=(t=i[o]).type)r[e]=Ai(r[e],t.name,n);else if(null==n)for(e in r)r[e]=Ai(r[e],t.name,null);return this}for(;++o<u;)if((e=(t=i[o]).type)&&(e=xi(r[e],t.name)))return e},copy:function(){var t={},n=this._;for(var e in n)t[e]=n[e].slice();return new Mi(t)},call:function(t,n){if((e=arguments.length-2)>0)for(var e,r,i=new Array(e),o=0;o<e;++o)i[o]=arguments[o+2];if(!this._.hasOwnProperty(t))throw new Error("unknown type: "+t);for(o=0,e=(r=this._[t]).length;o<e;++o)r[o].value.apply(n,i)},apply:function(t,n,e){if(!this._.hasOwnProperty(t))throw new Error("unknown type: "+t);for(var r=this._[t],i=0,o=r.length;i<o;++i)r[i].value.apply(n,e)}};var Ti,ki,Ci=bi,Di=0,Si=0,Ei=0,Ni=1e3,Ui=0,Oi=0,ji=0,Hi="object"==typeof performance&&performance.now?performance:Date,Pi="object"==typeof window&&window.requestAnimationFrame?window.requestAnimationFrame.bind(window):function(t){setTimeout(t,17)};function Fi(){return Oi||(Pi(Yi),Oi=Hi.now()+ji)}function Yi(){Oi=0}function qi(){this._call=this._time=this._next=null}function Ii(t,n,e){var r=new qi;return r.restart(t,n,e),r}function Li(){Oi=(Ui=Hi.now())+ji,Di=Si=0;try{!function(){Fi(),++Di;for(var t,n=Ti;n;)(t=Oi-n._time)>=0&&n._call.call(null,t),n=n._next;--Di}()}finally{Di=0,function(){var t,n,e=Ti,r=1/0;for(;e;)e._call?(r>e._time&&(r=e._time),t=e,e=e._next):(n=e._next,e._next=null,e=t?t._next=n:Ti=n);ki=t,Xi(r)}(),Oi=0}}function $i(){var t=Hi.now(),n=t-Ui;n>Ni&&(ji-=n,Ui=t)}function Xi(t){Di||(Si&&(Si=clearTimeout(Si)),t-Oi>24?(t<1/0&&(Si=setTimeout(Li,t-Hi.now()-ji)),Ei&&(Ei=clearInterval(Ei))):(Ei||(Ui=Hi.now(),Ei=setInterval($i,Ni)),Di=1,Pi(Li)))}qi.prototype=Ii.prototype={constructor:qi,restart:function(t,n,e){if("function"!=typeof t)throw new TypeError("callback is not a function");e=(null==e?Fi():+e)+(null==n?0:+n),this._next||ki===this||(ki?ki._next=this:Ti=this,ki=this),this._call=t,this._time=e,Xi()},stop:function(){this._call&&(this._call=null,this._time=1/0,Xi())}};var zi=function(t,n,e){var r=new qi;return n=null==n?0:+n,r.restart(function(e){r.stop(),t(e+n)},n,e),r},Ri=Ci("start","end","interrupt"),Vi=[],Bi=0,Zi=1,Wi=2,Qi=3,Ji=4,Gi=5,Ki=6,to=function(t,n,e,r,i,o){var u=t.__transition;if(u){if(e in u)return}else t.__transition={};!function(t,n,e){var r,i=t.__transition;function o(c){var l,s,f,h;if(e.state!==Zi)return a();for(l in i)if((h=i[l]).name===e.name){if(h.state===Qi)return zi(o);h.state===Ji?(h.state=Ki,h.timer.stop(),h.on.call("interrupt",t,t.__data__,h.index,h.group),delete i[l]):+l<n&&(h.state=Ki,h.timer.stop(),delete i[l])}if(zi(function(){e.state===Qi&&(e.state=Ji,e.timer.restart(u,e.delay,e.time),u(c))}),e.state=Wi,e.on.call("start",t,t.__data__,e.index,e.group),e.state===Wi){for(e.state=Qi,r=new Array(f=e.tween.length),l=0,s=-1;l<f;++l)(h=e.tween[l].value.call(t,t.__data__,e.index,e.group))&&(r[++s]=h);r.length=s+1}}function u(n){for(var i=n<e.duration?e.ease.call(null,n/e.duration):(e.timer.restart(a),e.state=Gi,1),o=-1,u=r.length;++o<u;)r[o].call(null,i);e.state===Gi&&(e.on.call("end",t,t.__data__,e.index,e.group),a())}function a(){for(var r in e.state=Ki,e.timer.stop(),delete i[n],i)return;delete t.__transition}i[n]=e,e.timer=Ii(function(t){e.state=Zi,e.timer.restart(o,e.delay,e.time),e.delay<=t&&o(t-e.delay)},0,e.time)}(t,e,{name:n,index:r,group:i,on:Ri,tween:Vi,time:o.time,delay:o.delay,duration:o.duration,ease:o.ease,timer:null,state:Bi})};function no(t,n){var e=ro(t,n);if(e.state>Bi)throw new Error("too late; already scheduled");return e}function eo(t,n){var e=ro(t,n);if(e.state>Wi)throw new Error("too late; already started");return e}function ro(t,n){var e=t.__transition;if(!e||!(e=e[n]))throw new Error("transition not found");return e}function io(t,n,e){var r=t._id;return t.each(function(){var t=eo(this,r);(t.value||(t.value={}))[n]=e.apply(this,arguments)}),function(t){return ro(t,r).value[n]}}var oo=function(t,n){var e;return("number"==typeof n?Vn:n instanceof Jt?zn:(e=Jt(n))?(n=e,zn):Kn)(t,n)};var uo=V.prototype.constructor;var ao=0;function co(t,n,e,r){this._groups=t,this._parents=n,this._name=e,this._id=r}function lo(t){return V().transition(t)}function so(){return++ao}var fo=V.prototype;co.prototype=lo.prototype={constructor:co,select:function(t){var n=this._name,e=this._id;"function"!=typeof t&&(t=c(t));for(var r=this._groups,i=r.length,o=new Array(i),u=0;u<i;++u)for(var a,l,s=r[u],f=s.length,h=o[u]=new Array(f),p=0;p<f;++p)(a=s[p])&&(l=t.call(a,a.__data__,p,s))&&("__data__"in a&&(l.__data__=a.__data__),h[p]=l,to(h[p],n,e,p,h,ro(a,e)));return new co(o,this._parents,n,e)},selectAll:function(t){var n=this._name,e=this._id;"function"!=typeof t&&(t=s(t));for(var r=this._groups,i=r.length,o=[],u=[],a=0;a<i;++a)for(var c,l=r[a],f=l.length,h=0;h<f;++h)if(c=l[h]){for(var p,d=t.call(c,c.__data__,h,l),g=ro(c,e),v=0,y=d.length;v<y;++v)(p=d[v])&&to(p,n,e,v,d,g);o.push(d),u.push(c)}return new co(o,u,n,e)},filter:function(t){"function"!=typeof t&&(t=d(t));for(var n=this._groups,e=n.length,r=new Array(e),i=0;i<e;++i)for(var o,u=n[i],a=u.length,c=r[i]=[],l=0;l<a;++l)(o=u[l])&&t.call(o,o.__data__,l,u)&&c.push(o);return new co(r,this._parents,this._name,this._id)},merge:function(t){if(t._id!==this._id)throw new Error;for(var n=this._groups,e=t._groups,r=n.length,i=e.length,o=Math.min(r,i),u=new Array(r),a=0;a<o;++a)for(var c,l=n[a],s=e[a],f=l.length,h=u[a]=new Array(f),p=0;p<f;++p)(c=l[p]||s[p])&&(h[p]=c);for(;a<r;++a)u[a]=n[a];return new co(u,this._parents,this._name,this._id)},selection:function(){return new uo(this._groups,this._parents)},transition:function(){for(var t=this._name,n=this._id,e=so(),r=this._groups,i=r.length,o=0;o<i;++o)for(var u,a=r[o],c=a.length,l=0;l<c;++l)if(u=a[l]){var s=ro(u,n);to(u,t,e,l,a,{time:s.time+s.delay+s.duration,delay:0,duration:s.duration,ease:s.ease})}return new co(r,this._parents,t,e)},call:fo.call,nodes:fo.nodes,node:fo.node,size:fo.size,empty:fo.empty,each:fo.each,on:function(t,n){var e=this._id;return arguments.length<2?ro(this.node(),e).on.on(t):this.each(function(t,n,e){var r,i,o=function(t){return(t+"").trim().split(/^|\s+/).every(function(t){var n=t.indexOf(".");return n>=0&&(t=t.slice(0,n)),!t||"start"===t})}(n)?no:eo;return function(){var u=o(this,t),a=u.on;a!==r&&(i=(r=a).copy()).on(n,e),u.on=i}}(e,t,n))},attr:function(t,n){var e=o(t),r="transform"===e?ae:oo;return this.attrTween(t,"function"==typeof n?(e.local?function(t,n,e){var r,i,o;return function(){var u,a=e(this);if(null!=a)return(u=this.getAttributeNS(t.space,t.local))===a?null:u===r&&a===i?o:o=n(r=u,i=a);this.removeAttributeNS(t.space,t.local)}}:function(t,n,e){var r,i,o;return function(){var u,a=e(this);if(null!=a)return(u=this.getAttribute(t))===a?null:u===r&&a===i?o:o=n(r=u,i=a);this.removeAttribute(t)}})(e,r,io(this,"attr."+t,n)):null==n?(e.local?function(t){return function(){this.removeAttributeNS(t.space,t.local)}}:function(t){return function(){this.removeAttribute(t)}})(e):(e.local?function(t,n,e){var r,i;return function(){var o=this.getAttributeNS(t.space,t.local);return o===e?null:o===r?i:i=n(r=o,e)}}:function(t,n,e){var r,i;return function(){var o=this.getAttribute(t);return o===e?null:o===r?i:i=n(r=o,e)}})(e,r,n+""))},attrTween:function(t,n){var e="attr."+t;if(arguments.length<2)return(e=this.tween(e))&&e._value;if(null==n)return this.tween(e,null);if("function"!=typeof n)throw new Error;var r=o(t);return this.tween(e,(r.local?function(t,n){function e(){var e=this,r=n.apply(e,arguments);return r&&function(n){e.setAttributeNS(t.space,t.local,r(n))}}return e._value=n,e}:function(t,n){function e(){var e=this,r=n.apply(e,arguments);return r&&function(n){e.setAttribute(t,r(n))}}return e._value=n,e})(r,n))},style:function(t,n,e){var r="transform"==(t+="")?ue:oo;return null==n?this.styleTween(t,function(t,n){var e,r,i;return function(){var o=M(this,t),u=(this.style.removeProperty(t),M(this,t));return o===u?null:o===e&&u===r?i:i=n(e=o,r=u)}}(t,r)).on("end.style."+t,function(t){return function(){this.style.removeProperty(t)}}(t)):this.styleTween(t,"function"==typeof n?function(t,n,e){var r,i,o;return function(){var u=M(this,t),a=e(this);return null==a&&(this.style.removeProperty(t),a=M(this,t)),u===a?null:u===r&&a===i?o:o=n(r=u,i=a)}}(t,r,io(this,"style."+t,n)):function(t,n,e){var r,i;return function(){var o=M(this,t);return o===e?null:o===r?i:i=n(r=o,e)}}(t,r,n+""),e)},styleTween:function(t,n,e){var r="style."+(t+="");if(arguments.length<2)return(r=this.tween(r))&&r._value;if(null==n)return this.tween(r,null);if("function"!=typeof n)throw new Error;return this.tween(r,function(t,n,e){function r(){var r=this,i=n.apply(r,arguments);return i&&function(n){r.style.setProperty(t,i(n),e)}}return r._value=n,r}(t,n,null==e?"":e))},text:function(t){return this.tween("text","function"==typeof t?function(t){return function(){var n=t(this);this.textContent=null==n?"":n}}(io(this,"text",t)):function(t){return function(){this.textContent=t}}(null==t?"":t+""))},remove:function(){return this.on("end.remove",function(t){return function(){var n=this.parentNode;for(var e in this.__transition)if(+e!==t)return;n&&n.removeChild(this)}}(this._id))},tween:function(t,n){var e=this._id;if(t+="",arguments.length<2){for(var r,i=ro(this.node(),e).tween,o=0,u=i.length;o<u;++o)if((r=i[o]).name===t)return r.value;return null}return this.each((null==n?function(t,n){var e,r;return function(){var i=eo(this,t),o=i.tween;if(o!==e)for(var u=0,a=(r=e=o).length;u<a;++u)if(r[u].name===n){(r=r.slice()).splice(u,1);break}i.tween=r}}:function(t,n,e){var r,i;if("function"!=typeof e)throw new Error;return function(){var o=eo(this,t),u=o.tween;if(u!==r){i=(r=u).slice();for(var a={name:n,value:e},c=0,l=i.length;c<l;++c)if(i[c].name===n){i[c]=a;break}c===l&&i.push(a)}o.tween=i}})(e,t,n))},delay:function(t){var n=this._id;return arguments.length?this.each(("function"==typeof t?function(t,n){return function(){no(this,t).delay=+n.apply(this,arguments)}}:function(t,n){return n=+n,function(){no(this,t).delay=n}})(n,t)):ro(this.node(),n).delay},duration:function(t){var n=this._id;return arguments.length?this.each(("function"==typeof t?function(t,n){return function(){eo(this,t).duration=+n.apply(this,arguments)}}:function(t,n){return n=+n,function(){eo(this,t).duration=n}})(n,t)):ro(this.node(),n).duration},ease:function(t){var n=this._id;return arguments.length?this.each(function(t,n){if("function"!=typeof n)throw new Error;return function(){eo(this,t).ease=n}}(n,t)):ro(this.node(),n).ease}};(function t(n){function e(t){return Math.pow(t,n)}return n=+n,e.exponent=t,e})(3),function t(n){function e(t){return 1-Math.pow(1-t,n)}return n=+n,e.exponent=t,e}(3),function t(n){function e(t){return((t*=2)<=1?Math.pow(t,n):2-Math.pow(2-t,n))/2}return n=+n,e.exponent=t,e}(3),Math.PI;(function t(n){function e(t){return t*t*((n+1)*t-n)}return n=+n,e.overshoot=t,e})(1.70158),function t(n){function e(t){return--t*t*((n+1)*t+n)+1}return n=+n,e.overshoot=t,e}(1.70158),function t(n){function e(t){return((t*=2)<1?t*t*((n+1)*t-n):(t-=2)*t*((n+1)*t+n)+2)/2}return n=+n,e.overshoot=t,e}(1.70158);var ho=2*Math.PI,po=(function t(n,e){var r=Math.asin(1/(n=Math.max(1,n)))*(e/=ho);function i(t){return n*Math.pow(2,10*--t)*Math.sin((r-t)/e)}return i.amplitude=function(n){return t(n,e*ho)},i.period=function(e){return t(n,e)},i}(1,.3),function t(n,e){var r=Math.asin(1/(n=Math.max(1,n)))*(e/=ho);function i(t){return 1-n*Math.pow(2,-10*(t=+t))*Math.sin((t+r)/e)}return i.amplitude=function(n){return t(n,e*ho)},i.period=function(e){return t(n,e)},i}(1,.3),function t(n,e){var r=Math.asin(1/(n=Math.max(1,n)))*(e/=ho);function i(t){return((t=2*t-1)<0?n*Math.pow(2,10*t)*Math.sin((r-t)/e):2-n*Math.pow(2,-10*t)*Math.sin((r+t)/e))/2}return i.amplitude=function(n){return t(n,e*ho)},i.period=function(e){return t(n,e)},i}(1,.3),{time:null,delay:0,duration:250,ease:function(t){return((t*=2)<=1?t*t*t:(t-=2)*t*t+2)/2}});function go(t,n){for(var e;!(e=t.__transition)||!(e=e[n]);)if(!(t=t.parentNode))return po.time=Fi(),po;return e}V.prototype.interrupt=function(t){return this.each(function(){!function(t,n){var e,r,i,o=t.__transition,u=!0;if(o){for(i in n=null==n?null:n+"",o)(e=o[i]).name===n?(r=e.state>Wi&&e.state<Gi,e.state=Ki,e.timer.stop(),r&&e.on.call("interrupt",t,t.__data__,e.index,e.group),delete o[i]):u=!1;u&&delete t.__transition}}(this,t)})},V.prototype.transition=function(t){var n,e;t instanceof co?(n=t._id,t=t._name):(n=so(),(e=po).time=Fi(),t=null==t?null:t+"");for(var r=this._groups,i=r.length,o=0;o<i;++o)for(var u,a=r[o],c=a.length,l=0;l<c;++l)(u=a[l])&&to(u,t,n,l,a,e||go(u,n));return new co(r,this._parents,t,n)};var vo=B(".tooltip"),yo={show:function(t){var n=F.pageY,e=F.pageX;e+10>document.body.clientWidth-215&&(e=document.body.clientWidth+5-215),vo.transition().duration(200).style("opacity",.9).on("end",function(){vo.classed("isActive",!0),vo.on("click",this.hide)}),vo.html(t).style("visibility","visible").style("left",e+"px").style("top",n+"px")},hide:function(){vo.transition().duration(500).style("opacity",0)},formatContent:function(t){var n='<ul class="tooltip-list">';return t.forEach(function(t,e){var r=null;t.class&&(r=t.class);var i=Object.keys(t)[0];n+='<li class="'.concat(r,'"><span class="tooltip-label">').concat(i,":</span> ").concat(t[i],"</li>")}),n+="</ul>"}};function mo(t){return function(t){if(Array.isArray(t)){for(var n=0,e=new Array(t.length);n<t.length;n++)e[n]=t[n];return e}}(t)||function(t){if(Symbol.iterator in Object(t)||"[object Arguments]"===Object.prototype.toString.call(t))return Array.from(t)}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}function wo(t){for(var n=1;n<arguments.length;n++){var e=null!=arguments[n]?arguments[n]:{},r=Object.keys(e);"function"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(e).filter(function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.forEach(function(n){_o(t,n,e[n])})}return t}function _o(t,n,e){return n in t?Object.defineProperty(t,n,{value:e,enumerable:!0,configurable:!0,writable:!0}):t[n]=e,t}var bo,Mo,xo,Ao,To,ko=it(".3s"),Co=["canada","china","eu","mexico"],Do={top:5,right:5,bottom:5,left:5},So=B(".chart"),Eo=8,No=11,Uo=12,Oo=Co;function jo(t){function n(){Mo=n.width(),xo=.9*n.width();var r=function(t,n,e,r){var i,o=t-2,u=n-2,a=Math.floor(o/e),c=Math.floor(u/r);i=a<=c?a:c;return i}(Mo-No*Uo,xo-No*Uo,No,Eo),i=function(t,n,e){for(var r=[],i=1,o=1,u=e,a=0;a<n;a++){r.push([]);for(var c=0;c<t;c++)r[a].push({x:i,y:o,width:u,height:u}),i+=u;i=1,o+=u}return r}(No,Eo,r),o=document.querySelectorAll(".map").length?So.selectAll(".map"):B(".chart").append("svg");o.attr("width",Mo+Do.left+Do.right).attr("height",xo+Do.top+Do.bottom).attr("class","map").attr("viewBox","0 0 "+(Mo+Do.left+Do.right)+" "+(xo+Do.top+Do.bottom)),Q("input").on("click",e.key.click);var u=document.querySelectorAll(".gridlines").length?So.selectAll(".gridlines"):o.append("g");u.attr("class","gridlines").attr("transform","translate("+Do.left+","+Do.top+")");document.querySelectorAll(".row").length?So.selectAll(".row"):u.selectAll(".row").data(i).enter().append("g").attr("class","row");var a=document.querySelectorAll(".gridmap").length?So.selectAll(".gridmap"):o.append("g").attr("class","gridmap").attr("transform","translate("+Do.left+","+Do.top+")"),c=Oo.length?t.map(function(t){return Object.keys(t).forEach(function(n){Co.includes(n)&&!Oo.includes(n)&&(t=wo({},t,_o({},n,0)))}),t}):t,l=document.querySelectorAll(".group").length?a.selectAll(".group"):a.selectAll(".group").data(c,function(t){return t.code}).enter().append("g").attr("class",function(t){return"group "+t.code});l.data(c,function(t){return t.code}).attr("x",function(t){return(t.col-1)*r+Uo*t.col}).attr("y",function(t){return(t.row-1)*r+Uo*t.row}).on("mouseover",e.states.mouseover).on("mouseleave",e.states.mouseleave),l.each(function(t,n,e){(document.querySelector(".state.".concat(t.code))?B(e[n]).selectAll(".state.".concat(t.code)):B(e[n]).selectAll(".state").data([t],function(t){return t.code}).enter().append("rect").attr("class",function(t){return"state "+t.code})).attr("stroke",function(t){return Ao(t.totaldollars)}).attr("x",function(t){return(t.col-1)*r+Uo*t.col}).attr("y",function(t){return(t.row-1)*r+Uo*t.row}).attr("width",r+2).attr("height",r+2);var i=Array(Math.round(t.canada/100*100)).fill({state:t.code,country:"canada"}),o=Array(Math.round(t.china/100*100)).fill({state:t.code,country:"china"}),u=Array(Math.round(t.eu/100*100)).fill({state:t.code,country:"eu"}),a=Array(Math.round(t.mexico/100*100)).fill({state:t.code,country:"mexico"}),c=i.concat(o).concat(u).concat(a);c=Array(100-c.length).fill({state:t.code,country:"other"}).concat(c);var l=B(e[n]).attr("x"),s=B(e[n]).attr("y"),f=B(e[n]).selectAll(".percent.".concat(t.code));f.attr("height",(r-Uo/2)/10).transition(lo().duration(1200)).attr("height",0).remove(),f=B(e[n]).selectAll(".percent.".concat(t.code)).data(c,function(t,n){return wo({},t,{i:n})}).enter().append("rect").attr("class","percent "+t.code).attr("fill",function(t){return To(t.country)}).attr("x",function(t,n){return Math.abs(99-n)%10*(r-2)/10+parseInt(l,10)+2}).attr("y",function(t,n){return Math.ceil((n+1)/10)*(r-2)/10+parseInt(s,10)-r/10+1+2}).attr("height",0).attr("width",(r-Uo/2)/10).transition(lo().duration(600)).attr("height",(r-Uo/2)/10);var h=B(e[n]).selectAll(".label.".concat(t.code));h.remove(),(h=B(e[n]).selectAll(".label.".concat(t.code)).data([t],function(t){return t.code}).enter().append("text").attr("class",function(n){return"label "+t.code})).attr("x",function(t){return(t.col-1)*r+r/2+Uo*t.col}).attr("y",function(t){return(t.row-1)*r+(r/2-3)+Uo*t.row}).style("text-anchor","middle").text(function(n){return t.code})})}Ao=function t(){var n=me(de,Vn);return n.copy=function(){return ye(n,t())},_e(n)}().domain(yt(t,function(t){return+t.totaldollars})).range(["#E5E5E5","#5E5E5E"]),To=Ht().domain(Co.concat(["other"])).range(["#9EB040","#FE5000","#0AA4CF","#F2AF19","#fff"]),n.width=function(){if(!arguments.length)return Mo;Mo=(arguments.length<=0?void 0:arguments[0])-Do.left-Do.right},n.height=function(){if(!arguments.length)return xo;xo=(arguments.length<=0?void 0:arguments[0])-Do.top-Do.bottom};var e={key:{click:function(t){var n=["legend-label","active","other","all"],e=this.classList,r=e.contains("all"),i=!this.checked,o=(B("input.all").node().checked,mo(e).find(function(t){return!n.includes(t)})),u=B("input.all").node();o&&Oo.includes(o)?(Oo=Oo.filter(function(t){return t!==o}),u.removeAttribute("disabled"),u.checked=!1):o&&Oo.push(o),4!==Oo.length?(u.checked=!1,u.removeAttribute("disabled")):(B("input.all").node().checked=!0,u.disabled=!0),r&&!i?(Oo=Co,Q("input").each(function(t,n,e){e[n].checked=!0})):Oo=Oo,So.call(bo)}},states:{mouseover:function(t){e.states.showTooltip(t)},mouseleave:function(t){yo.hide()},click:function(t){},showTooltip:function(t){var n='\n        <p class="tooltip-heading">\n          '.concat(t.state,'\n        </p>\n        <p class="tooltip-body">\n          $').concat(ko(t.totaldollars).replace(/G/,"B"),' Total Trade\n        </p>\n        <ul class="tooltip-list">\n          <li class="canada">Canada: ').concat(t.canada?ko(t.canada):0,'%</li>\n          <li class="china">China: ').concat(t.china?ko(t.china):0,'%</li>\n          <li class="eu">EU: ').concat(t.eu?ko(t.eu):0,'%</li>\n          <li class="mexico">Mexico: ').concat(t.mexico?ko(t.mexico):0,'%</li>\n        </ul>\n        <p class="tooltip-footer">\n          ').concat(ko(t.grandtotal),"% of Total Trade\n        </p>\n        ");yo.show(n)}}};return n}function Ho(){var t=So.node().offsetWidth;bo.width(t),bo.height(t),So.call(bo)}var Po,Fo={init:function(t){So.datum(t),bo=jo(t),Ho()},draw:jo,resize:Ho},Yo="https://spreadsheets.google.com/feeds/list/".concat("1qmhbztaMBKatqZkT4dQQsEm_j2Xl5d9Mp3zKmmdrqy4","/1/public/values?alt=json");fetch(Yo).then(function(t){return t.json()}).then(function(t){Po=function(t){return t.map(function(t){var n=t,e={};return Object.keys(n).forEach(function(t){var r=t;r.includes("gsx$")&&(e[r.replace("gsx$","")]=n[r].$t)}),e})}(t.feed.entry)},function(t){console.log("Error: "+t.result.error.message)}).then(function(){Fo.init(Po)}),window.addEventListener("resize",Fo.resize)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,